{"remainingRequest":"/Users/qitmac001131/Desktop/work/ykit3/packages/ykit3-config-resolver/node_modules/babel-loader/lib/index.js??ref--4-2!/Users/qitmac001131/Desktop/test/sniperjs/example/node/node_modules/core-js/modules/es6.regexp.split.js","dependencies":[{"path":"/Users/qitmac001131/Desktop/test/sniperjs/example/node/node_modules/core-js/modules/es6.regexp.split.js","hash":"43d39ce0a9e06ff9cc8730a522410996"},{"path":"/Users/qitmac001131/Desktop/work/ykit3/packages/ykit3-config-resolver/node_modules/cache-loader-hash/dist/cjs.js","hash":"d62e2d390167bf8193569f1644327c55"},{"path":"/Users/qitmac001131/Desktop/work/ykit3/packages/ykit3-config-resolver/node_modules/babel-loader/lib/index.js","hash":"19adf3159c902f1ed7907f3931384270"}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKdmFyIGlzUmVnRXhwID0gcmVxdWlyZSgnLi9faXMtcmVnZXhwJyk7Cgp2YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTsKCnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJyk7Cgp2YXIgYWR2YW5jZVN0cmluZ0luZGV4ID0gcmVxdWlyZSgnLi9fYWR2YW5jZS1zdHJpbmctaW5kZXgnKTsKCnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpOwoKdmFyIGNhbGxSZWdFeHBFeGVjID0gcmVxdWlyZSgnLi9fcmVnZXhwLWV4ZWMtYWJzdHJhY3QnKTsKCnZhciByZWdleHBFeGVjID0gcmVxdWlyZSgnLi9fcmVnZXhwLWV4ZWMnKTsKCnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7Cgp2YXIgJG1pbiA9IE1hdGgubWluOwp2YXIgJHB1c2ggPSBbXS5wdXNoOwp2YXIgJFNQTElUID0gJ3NwbGl0JzsKdmFyIExFTkdUSCA9ICdsZW5ndGgnOwp2YXIgTEFTVF9JTkRFWCA9ICdsYXN0SW5kZXgnOwp2YXIgTUFYX1VJTlQzMiA9IDB4ZmZmZmZmZmY7IC8vIGJhYmVsLW1pbmlmeSB0cmFuc3BpbGVzIFJlZ0V4cCgneCcsICd5JykgLT4gL3gveSBhbmQgaXQgY2F1c2VzIFN5bnRheEVycm9yCgp2YXIgU1VQUE9SVFNfWSA9ICFmYWlscyhmdW5jdGlvbiAoKSB7CiAgUmVnRXhwKE1BWF9VSU5UMzIsICd5Jyk7Cn0pOyAvLyBAQHNwbGl0IGxvZ2ljCgpyZXF1aXJlKCcuL19maXgtcmUtd2tzJykoJ3NwbGl0JywgMiwgZnVuY3Rpb24gKGRlZmluZWQsIFNQTElULCAkc3BsaXQsIG1heWJlQ2FsbE5hdGl2ZSkgewogIHZhciBpbnRlcm5hbFNwbGl0OwoKICBpZiAoJ2FiYmMnWyRTUExJVF0oLyhiKSovKVsxXSA9PSAnYycgfHwgJ3Rlc3QnWyRTUExJVF0oLyg/OikvLCAtMSlbTEVOR1RIXSAhPSA0IHx8ICdhYidbJFNQTElUXSgvKD86YWIpKi8pW0xFTkdUSF0gIT0gMiB8fCAnLidbJFNQTElUXSgvKC4/KSguPykvKVtMRU5HVEhdICE9IDQgfHwgJy4nWyRTUExJVF0oLygpKCkvKVtMRU5HVEhdID4gMSB8fCAnJ1skU1BMSVRdKC8uPy8pW0xFTkdUSF0pIHsKICAgIC8vIGJhc2VkIG9uIGVzNS1zaGltIGltcGxlbWVudGF0aW9uLCBuZWVkIHRvIHJld29yayBpdAogICAgaW50ZXJuYWxTcGxpdCA9IGZ1bmN0aW9uIGludGVybmFsU3BsaXQoc2VwYXJhdG9yLCBsaW1pdCkgewogICAgICB2YXIgc3RyaW5nID0gU3RyaW5nKHRoaXMpOwogICAgICBpZiAoc2VwYXJhdG9yID09PSB1bmRlZmluZWQgJiYgbGltaXQgPT09IDApIHJldHVybiBbXTsgLy8gSWYgYHNlcGFyYXRvcmAgaXMgbm90IGEgcmVnZXgsIHVzZSBuYXRpdmUgc3BsaXQKCiAgICAgIGlmICghaXNSZWdFeHAoc2VwYXJhdG9yKSkgcmV0dXJuICRzcGxpdC5jYWxsKHN0cmluZywgc2VwYXJhdG9yLCBsaW1pdCk7CiAgICAgIHZhciBvdXRwdXQgPSBbXTsKICAgICAgdmFyIGZsYWdzID0gKHNlcGFyYXRvci5pZ25vcmVDYXNlID8gJ2knIDogJycpICsgKHNlcGFyYXRvci5tdWx0aWxpbmUgPyAnbScgOiAnJykgKyAoc2VwYXJhdG9yLnVuaWNvZGUgPyAndScgOiAnJykgKyAoc2VwYXJhdG9yLnN0aWNreSA/ICd5JyA6ICcnKTsKICAgICAgdmFyIGxhc3RMYXN0SW5kZXggPSAwOwogICAgICB2YXIgc3BsaXRMaW1pdCA9IGxpbWl0ID09PSB1bmRlZmluZWQgPyBNQVhfVUlOVDMyIDogbGltaXQgPj4+IDA7IC8vIE1ha2UgYGdsb2JhbGAgYW5kIGF2b2lkIGBsYXN0SW5kZXhgIGlzc3VlcyBieSB3b3JraW5nIHdpdGggYSBjb3B5CgogICAgICB2YXIgc2VwYXJhdG9yQ29weSA9IG5ldyBSZWdFeHAoc2VwYXJhdG9yLnNvdXJjZSwgZmxhZ3MgKyAnZycpOwogICAgICB2YXIgbWF0Y2gsIGxhc3RJbmRleCwgbGFzdExlbmd0aDsKCiAgICAgIHdoaWxlIChtYXRjaCA9IHJlZ2V4cEV4ZWMuY2FsbChzZXBhcmF0b3JDb3B5LCBzdHJpbmcpKSB7CiAgICAgICAgbGFzdEluZGV4ID0gc2VwYXJhdG9yQ29weVtMQVNUX0lOREVYXTsKCiAgICAgICAgaWYgKGxhc3RJbmRleCA+IGxhc3RMYXN0SW5kZXgpIHsKICAgICAgICAgIG91dHB1dC5wdXNoKHN0cmluZy5zbGljZShsYXN0TGFzdEluZGV4LCBtYXRjaC5pbmRleCkpOwogICAgICAgICAgaWYgKG1hdGNoW0xFTkdUSF0gPiAxICYmIG1hdGNoLmluZGV4IDwgc3RyaW5nW0xFTkdUSF0pICRwdXNoLmFwcGx5KG91dHB1dCwgbWF0Y2guc2xpY2UoMSkpOwogICAgICAgICAgbGFzdExlbmd0aCA9IG1hdGNoWzBdW0xFTkdUSF07CiAgICAgICAgICBsYXN0TGFzdEluZGV4ID0gbGFzdEluZGV4OwogICAgICAgICAgaWYgKG91dHB1dFtMRU5HVEhdID49IHNwbGl0TGltaXQpIGJyZWFrOwogICAgICAgIH0KCiAgICAgICAgaWYgKHNlcGFyYXRvckNvcHlbTEFTVF9JTkRFWF0gPT09IG1hdGNoLmluZGV4KSBzZXBhcmF0b3JDb3B5W0xBU1RfSU5ERVhdKys7IC8vIEF2b2lkIGFuIGluZmluaXRlIGxvb3AKICAgICAgfQoKICAgICAgaWYgKGxhc3RMYXN0SW5kZXggPT09IHN0cmluZ1tMRU5HVEhdKSB7CiAgICAgICAgaWYgKGxhc3RMZW5ndGggfHwgIXNlcGFyYXRvckNvcHkudGVzdCgnJykpIG91dHB1dC5wdXNoKCcnKTsKICAgICAgfSBlbHNlIG91dHB1dC5wdXNoKHN0cmluZy5zbGljZShsYXN0TGFzdEluZGV4KSk7CgogICAgICByZXR1cm4gb3V0cHV0W0xFTkdUSF0gPiBzcGxpdExpbWl0ID8gb3V0cHV0LnNsaWNlKDAsIHNwbGl0TGltaXQpIDogb3V0cHV0OwogICAgfTsgLy8gQ2hha3JhLCBWOAoKICB9IGVsc2UgaWYgKCcwJ1skU1BMSVRdKHVuZGVmaW5lZCwgMClbTEVOR1RIXSkgewogICAgaW50ZXJuYWxTcGxpdCA9IGZ1bmN0aW9uIGludGVybmFsU3BsaXQoc2VwYXJhdG9yLCBsaW1pdCkgewogICAgICByZXR1cm4gc2VwYXJhdG9yID09PSB1bmRlZmluZWQgJiYgbGltaXQgPT09IDAgPyBbXSA6ICRzcGxpdC5jYWxsKHRoaXMsIHNlcGFyYXRvciwgbGltaXQpOwogICAgfTsKICB9IGVsc2UgewogICAgaW50ZXJuYWxTcGxpdCA9ICRzcGxpdDsKICB9CgogIHJldHVybiBbLy8gYFN0cmluZy5wcm90b3R5cGUuc3BsaXRgIG1ldGhvZAogIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUuc3BsaXQKICBmdW5jdGlvbiBzcGxpdChzZXBhcmF0b3IsIGxpbWl0KSB7CiAgICB2YXIgTyA9IGRlZmluZWQodGhpcyk7CiAgICB2YXIgc3BsaXR0ZXIgPSBzZXBhcmF0b3IgPT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogc2VwYXJhdG9yW1NQTElUXTsKICAgIHJldHVybiBzcGxpdHRlciAhPT0gdW5kZWZpbmVkID8gc3BsaXR0ZXIuY2FsbChzZXBhcmF0b3IsIE8sIGxpbWl0KSA6IGludGVybmFsU3BsaXQuY2FsbChTdHJpbmcoTyksIHNlcGFyYXRvciwgbGltaXQpOwogIH0sIC8vIGBSZWdFeHAucHJvdG90eXBlW0BAc3BsaXRdYCBtZXRob2QKICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1yZWdleHAucHJvdG90eXBlLUBAc3BsaXQKICAvLwogIC8vIE5PVEU6IFRoaXMgY2Fubm90IGJlIHByb3Blcmx5IHBvbHlmaWxsZWQgaW4gZW5naW5lcyB0aGF0IGRvbid0IHN1cHBvcnQKICAvLyB0aGUgJ3knIGZsYWcuCiAgZnVuY3Rpb24gKHJlZ2V4cCwgbGltaXQpIHsKICAgIHZhciByZXMgPSBtYXliZUNhbGxOYXRpdmUoaW50ZXJuYWxTcGxpdCwgcmVnZXhwLCB0aGlzLCBsaW1pdCwgaW50ZXJuYWxTcGxpdCAhPT0gJHNwbGl0KTsKICAgIGlmIChyZXMuZG9uZSkgcmV0dXJuIHJlcy52YWx1ZTsKICAgIHZhciByeCA9IGFuT2JqZWN0KHJlZ2V4cCk7CiAgICB2YXIgUyA9IFN0cmluZyh0aGlzKTsKICAgIHZhciBDID0gc3BlY2llc0NvbnN0cnVjdG9yKHJ4LCBSZWdFeHApOwogICAgdmFyIHVuaWNvZGVNYXRjaGluZyA9IHJ4LnVuaWNvZGU7CiAgICB2YXIgZmxhZ3MgPSAocnguaWdub3JlQ2FzZSA/ICdpJyA6ICcnKSArIChyeC5tdWx0aWxpbmUgPyAnbScgOiAnJykgKyAocngudW5pY29kZSA/ICd1JyA6ICcnKSArIChTVVBQT1JUU19ZID8gJ3knIDogJ2cnKTsgLy8gXig/ICsgcnggKyApIGlzIG5lZWRlZCwgaW4gY29tYmluYXRpb24gd2l0aCBzb21lIFMgc2xpY2luZywgdG8KICAgIC8vIHNpbXVsYXRlIHRoZSAneScgZmxhZy4KCiAgICB2YXIgc3BsaXR0ZXIgPSBuZXcgQyhTVVBQT1JUU19ZID8gcnggOiAnXig/OicgKyByeC5zb3VyY2UgKyAnKScsIGZsYWdzKTsKICAgIHZhciBsaW0gPSBsaW1pdCA9PT0gdW5kZWZpbmVkID8gTUFYX1VJTlQzMiA6IGxpbWl0ID4+PiAwOwogICAgaWYgKGxpbSA9PT0gMCkgcmV0dXJuIFtdOwogICAgaWYgKFMubGVuZ3RoID09PSAwKSByZXR1cm4gY2FsbFJlZ0V4cEV4ZWMoc3BsaXR0ZXIsIFMpID09PSBudWxsID8gW1NdIDogW107CiAgICB2YXIgcCA9IDA7CiAgICB2YXIgcSA9IDA7CiAgICB2YXIgQSA9IFtdOwoKICAgIHdoaWxlIChxIDwgUy5sZW5ndGgpIHsKICAgICAgc3BsaXR0ZXIubGFzdEluZGV4ID0gU1VQUE9SVFNfWSA/IHEgOiAwOwogICAgICB2YXIgeiA9IGNhbGxSZWdFeHBFeGVjKHNwbGl0dGVyLCBTVVBQT1JUU19ZID8gUyA6IFMuc2xpY2UocSkpOwogICAgICB2YXIgZTsKCiAgICAgIGlmICh6ID09PSBudWxsIHx8IChlID0gJG1pbih0b0xlbmd0aChzcGxpdHRlci5sYXN0SW5kZXggKyAoU1VQUE9SVFNfWSA/IDAgOiBxKSksIFMubGVuZ3RoKSkgPT09IHApIHsKICAgICAgICBxID0gYWR2YW5jZVN0cmluZ0luZGV4KFMsIHEsIHVuaWNvZGVNYXRjaGluZyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgQS5wdXNoKFMuc2xpY2UocCwgcSkpOwogICAgICAgIGlmIChBLmxlbmd0aCA9PT0gbGltKSByZXR1cm4gQTsKCiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPD0gei5sZW5ndGggLSAxOyBpKyspIHsKICAgICAgICAgIEEucHVzaCh6W2ldKTsKICAgICAgICAgIGlmIChBLmxlbmd0aCA9PT0gbGltKSByZXR1cm4gQTsKICAgICAgICB9CgogICAgICAgIHEgPSBwID0gZTsKICAgICAgfQogICAgfQoKICAgIEEucHVzaChTLnNsaWNlKHApKTsKICAgIHJldHVybiBBOwogIH1dOwp9KTs="},{"version":3,"sources":["/Users/qitmac001131/Desktop/test/sniperjs/example/node/node_modules/core-js/modules/es6.regexp.split.js"],"names":["isRegExp","require","anObject","speciesConstructor","advanceStringIndex","toLength","callRegExpExec","regexpExec","fails","$min","Math","min","$push","push","$SPLIT","LENGTH","LAST_INDEX","MAX_UINT32","SUPPORTS_Y","RegExp","defined","SPLIT","$split","maybeCallNative","internalSplit","separator","limit","string","String","undefined","call","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","splitLimit","separatorCopy","source","match","lastIndex","lastLength","slice","index","apply","test","split","O","splitter","regexp","res","done","value","rx","S","C","unicodeMatching","lim","length","p","q","A","z","e","i"],"mappings":"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","sourcesContent":["'use strict';\n\nvar isRegExp = require('./_is-regexp');\nvar anObject = require('./_an-object');\nvar speciesConstructor = require('./_species-constructor');\nvar advanceStringIndex = require('./_advance-string-index');\nvar toLength = require('./_to-length');\nvar callRegExpExec = require('./_regexp-exec-abstract');\nvar regexpExec = require('./_regexp-exec');\nvar fails = require('./_fails');\nvar $min = Math.min;\nvar $push = [].push;\nvar $SPLIT = 'split';\nvar LENGTH = 'length';\nvar LAST_INDEX = 'lastIndex';\nvar MAX_UINT32 = 0xffffffff;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return $split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy[LAST_INDEX];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);\n    };\n  } else {\n    internalSplit = $split;\n  }\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = defined(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n});\n"]}]}