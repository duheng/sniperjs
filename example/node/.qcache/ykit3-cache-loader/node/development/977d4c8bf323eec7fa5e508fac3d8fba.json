{"remainingRequest":"/Users/Aaron/Desktop/work/qunar/work/ykit3/packages/ykit3-cli/node_modules/babel-loader/lib/index.js??ref--4-2!/Users/Aaron/Desktop/work/qunar/work/sniperjs/example/node/node_modules/tiny-invariant/dist/tiny-invariant.esm.js","dependencies":[{"path":"/Users/Aaron/Desktop/work/qunar/work/sniperjs/example/node/node_modules/tiny-invariant/dist/tiny-invariant.esm.js","hash":"452b150a707124da24badbbf46c62d1b"},{"path":"/Users/Aaron/Desktop/work/qunar/work/ykit3/packages/ykit3-cli/node_modules/cache-loader-hash/dist/cjs.js","hash":"d62e2d390167bf8193569f1644327c55"},{"path":"/Users/Aaron/Desktop/work/qunar/work/ykit3/packages/ykit3-cli/node_modules/babel-loader/lib/index.js","hash":"19adf3159c902f1ed7907f3931384270"}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7CnZhciBpc1Byb2R1Y3Rpb24gPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nOwp2YXIgcHJlZml4ID0gJ0ludmFyaWFudCBmYWlsZWQnOwoKZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgbWVzc2FnZSkgewogIGlmIChjb25kaXRpb24pIHsKICAgIHJldHVybjsKICB9CgogIGlmIChpc1Byb2R1Y3Rpb24pIHsKICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXgpOwogIH0KCiAgdGhyb3cgbmV3IEVycm9yKHByZWZpeCArICI6ICIgKyAobWVzc2FnZSB8fCAnJykpOwp9Cgp2YXIgX2RlZmF1bHQgPSBpbnZhcmlhbnQ7CmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0Ow=="},{"version":3,"sources":["/Users/Aaron/Desktop/work/qunar/work/sniperjs/example/node/node_modules/tiny-invariant/dist/tiny-invariant.esm.js"],"names":["isProduction","process","env","NODE_ENV","prefix","invariant","condition","message","Error"],"mappings":";;;;;;AAAA,IAAIA,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA5C;AACA,IAAIC,MAAM,GAAG,kBAAb;;AACA,SAASC,SAAT,CAAmBC,SAAnB,EAA8BC,OAA9B,EAAuC;AACnC,MAAID,SAAJ,EAAe;AACX;AACH;;AACD,MAAIN,YAAJ,EAAkB;AACd,UAAM,IAAIQ,KAAJ,CAAUJ,MAAV,CAAN;AACH;;AACD,QAAM,IAAII,KAAJ,CAAUJ,MAAM,GAAG,IAAT,IAAiBG,OAAO,IAAI,EAA5B,CAAV,CAAN;AACH;;eAEcF,S","sourcesContent":["var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    throw new Error(prefix + \": \" + (message || ''));\n}\n\nexport default invariant;\n"]}]}