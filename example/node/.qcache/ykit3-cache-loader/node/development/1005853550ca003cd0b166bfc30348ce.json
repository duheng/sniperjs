{"remainingRequest":"/Users/qitmac001131/Desktop/work/ykit3/packages/ykit3-config-resolver/node_modules/babel-loader/lib/index.js??ref--4-2!/Users/qitmac001131/Desktop/test/sniperjs/packages/WebErrorReporter/dist/index.js","dependencies":[{"path":"/Users/qitmac001131/Desktop/test/sniperjs/packages/WebErrorReporter/dist/index.js","hash":"9e5e8cab863b8c9dd1d4cda476670677"},{"path":"/Users/qitmac001131/Desktop/work/ykit3/packages/ykit3-config-resolver/node_modules/thread-loader/dist/cjs.js","hash":"bb5f7e540106ebb106f274139566f1d0"},{"path":"/Users/qitmac001131/Desktop/work/ykit3/packages/ykit3-config-resolver/node_modules/cache-loader-hash/dist/cjs.js","hash":"d62e2d390167bf8193569f1644327c55"},{"path":"/Users/qitmac001131/Desktop/work/ykit3/packages/ykit3-config-resolver/node_modules/babel-loader/lib/index.js","hash":"19adf3159c902f1ed7907f3931384270"}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/qitmac001131/Desktop/test/sniperjs/packages/WebErrorReporter/dist/index.js"],"names":["global","factory","exports","module","define","amd","self","Sniperjs","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_inherits","subClass","superClass","create","constructor","value","_setPrototypeOf","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","p","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","arguments","apply","_defineProperty","obj","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","_objectSpread2","source","forEach","getOwnPropertyDescriptors","defineProperties","isPlainObject","isString","isArray","isEmptyObject","isBoolean","isFunction","isNumber","isNaN","isPromise","Promise","resolve","extend","getAgent","window","history","wx","swan","my","tt","qq","quick","err","getGlobal","getSystemInfo","globalObj","systemInfo","getSystemInfoSync","getMeta","agent","system","assign","_defineProperty$1","ownKeys$1","_objectSpread2$1","throwErr","Error","strategies","url","validate","val","msgRequred","appVersion","msgTypeErr","env","repeat","ignoreErrors","autoBreadcrumbs","breadcrumbsMax","random","msgRangeErr","delay","beforeReport","proxyValidate","proxyObj","set","validateConfig","config","proxy","prop","BehaviorReporter","logQueue","appkey","log","applyRequested","delayTimer","mergeConfig","opts","addLog","getLog","slice","clearLog","report","curLogQueue","clearTimeout","setTimeout","sendLog","gLog","logs","data","ret","then","res","startReport","request","method","use","plugin","args","init","applyRequest","createCommonjsModule","fn","basedir","path","require","base","commonjsRequire","undefined","runtime_1","runtime","Op","hasOwn","hasOwnProperty","undefined$1","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","makeInvokeMethod","tryCatch","arg","type","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","displayName","defineIteratorMethods","isGeneratorFunction","genFun","ctor","name","mark","awrap","__await","AsyncIterator","PromiseImpl","invoke","reject","record","unwrapped","error","previousPromise","enqueue","callInvokeWithMethodAndArg","async","iter","next","done","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","reverse","pop","iterable","iteratorMethod","skipTempReset","prev","charAt","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","errorTypeReg","RegExp","join","parseScriptRuntimeError","stack","line","col","file","errInfoList","split","errMsg","errStack","match","replace","trim","console","exec","parseStaticError","event","src","href","pluginHookApp","core","addEventListener","srcElement","isElementTarget","HTMLScriptElement","HTMLLinkElement","HTMLImageElement","__log","reason","promise","Request","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","Reportor","_BehaviorReporter","_super","_this"],"mappings":"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","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Sniperjs = factory());\n}(this, (function () { 'use strict';\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    return _assertThisInitialized(self);\n  }\n\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n    return function _createSuperInternal() {\n      var Super = _getPrototypeOf(Derived),\n          result;\n\n      if (hasNativeReflectConstruct) {\n        var NewTarget = _getPrototypeOf(this).constructor;\n\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n\n      return _possibleConstructorReturn(this, result);\n    };\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n  /* eslint-disable no-empty */\n\n  /* eslint-disable no-undef */\n\n\n  const {\n    toString\n  } = Object.prototype;\n\n  function isPlainObject(target) {\n    return toString.call(target) === '[object Object]';\n  }\n\n  function isString(target) {\n    return toString.call(target) === '[object String]';\n  }\n\n  function isArray(target) {\n    return toString.call(target) === '[object Array]';\n  }\n\n  function isEmptyObject(target) {\n    if (!isPlainObject(target)) return false;\n    return Object.keys(target).length > 0;\n  }\n\n  function isBoolean(target) {\n    return toString.call(target) === '[object Boolean]';\n  }\n\n  function isFunction(target) {\n    return typeof target === 'function';\n  }\n\n  function isNumber(target) {\n    // eslint-disable-next-line no-restricted-globals\n    return toString.call(target) === '[object Number]' && !isNaN(target);\n  }\n\n  function isPromise(object) {\n    if (Promise && Promise.resolve) {\n      return Promise.resolve(object) == object;\n    }\n  }\n\n  function extend(target, source) {\n    return _objectSpread2(_objectSpread2({}, target), source);\n  }\n\n  function getAgent() {\n    try {\n      if (window && window.history) {\n        return 'WEB_APP';\n      }\n\n      if (wx) {\n        return 'WX_MINI_APP';\n      }\n\n      if (swan) {\n        return 'BAIDU_MINI_APP';\n      }\n\n      if (my) {\n        return 'ALIPAY_MINI_APP';\n      }\n\n      if (tt) {\n        return 'TT_MINI_APP';\n      }\n\n      if (qq) {\n        return 'QQ_MINI_APP';\n      }\n\n      if (quick) {\n        return 'QUICK_APP';\n      }\n    } catch (err) {\n      return 'UNKNOWN_APP';\n    }\n  }\n\n  function getGlobal() {\n    try {\n      if (window && window.history) {\n        return window;\n      }\n\n      if (wx) {\n        return wx;\n      }\n\n      if (swan) {\n        return swan;\n      }\n\n      if (my) {\n        return my;\n      }\n\n      if (tt) {\n        return tt;\n      }\n\n      if (qq) {\n        return qq;\n      }\n    } catch (err) {\n      return {};\n    }\n  }\n\n  function getSystemInfo() {\n    // 这里做个缓存\n    const globalObj = getGlobal();\n    const key = '__sniper__internal__data__';\n\n    if (globalObj[key] && !isEmptyObject(globalObj[key].systemInfo || {})) {\n      return globalObj[key].systemInfo;\n    }\n\n    try {\n      const systemInfo = globalObj.getSystemInfoSync();\n      globalObj[key] = globalObj[key] || {};\n      globalObj[key].systemInfo = systemInfo;\n      return systemInfo;\n    } catch (err) {\n      return {};\n    }\n  }\n\n  function getMeta() {\n    return {\n      agent: getAgent(),\n      system: Object.assign({}, getSystemInfo())\n    };\n  }\n\n  function _defineProperty$1(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys$1(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2$1(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys$1(Object(source), true).forEach(function (key) {\n          _defineProperty$1(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys$1(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function throwErr(err) {\n    throw new Error(err);\n  }\n\n  const strategies = {\n    url: {\n      validate(val) {\n        if (!val) {\n          throwErr(this.msgRequred);\n        }\n      },\n\n      msgRequred: 'SNIPER ERROR: 配置中 url 字段必填.'\n    },\n    appVersion: {\n      validate(val) {\n        if (!val) return;\n\n        if (!isString(val)) {\n          throwErr(this.msgTypeErr);\n        }\n      },\n\n      msgTypeErr: 'SNIPER ERROR: 配置中 appVersion 字段类型需为 String.'\n    },\n    env: {\n      validate(val) {\n        if (!val) return;\n\n        if (!isString(val)) {\n          throwErr(this.msgTypeErr);\n        }\n      },\n\n      msgTypeErr: 'SNIPER ERROR: 配置中 env 字段类型需为 String.'\n    },\n    repeat: {\n      validate(val) {\n        if (!isNumber(val)) {\n          throwErr(this.msgTypeErr);\n        }\n      },\n\n      msgTypeErr: 'SNIPER ERROR: 配置中 repeat 字段类型需为 Number.'\n    },\n    ignoreErrors: {\n      validate(val) {\n        if (!isArray(val)) {\n          throwErr(this.msgTypeErr);\n        }\n      },\n\n      msgTypeErr: 'SNIPER ERROR: 配置中 ignoreErrors 字段类型需为 Array.'\n    },\n    autoBreadcrumbs: {\n      validate(val) {\n        if (!isBoolean(val)) {\n          throwErr(this.msgTypeErr);\n        }\n      },\n\n      msgTypeErr: 'SNIPER ERROR: 配置中 autoBreadcrumbs 字段类型需为 Array.'\n    },\n    breadcrumbsMax: {\n      validate(val) {\n        if (!isNumber(val)) {\n          throwErr(this.msgTypeErr);\n        }\n      },\n\n      msgTypeErr: 'SNIPER ERROR: 配置中 breadcrumbsMax 字段类型需为 Number.'\n    },\n    random: {\n      validate(val) {\n        if (!isNumber(val)) {\n          throwErr(this.msgTypeErr);\n        } else if (!(val > 0 && val <= 1)) {\n          throwErr(this.msgRangeErr);\n        }\n      },\n\n      msgTypeErr: 'SNIPER ERROR: 配置中 breadcrumbsMax 字段类型需为 Number.',\n      msgRangeErr: 'SNIPER ERROR: 配置中 breadcrumbsMax 字段范围需满足 (0, 1]'\n    },\n    delay: {\n      validate(val) {\n        if (!isNumber(val)) {\n          throwErr(this.msgTypeErr);\n        }\n      },\n\n      msgTypeErr: 'SNIPER ERROR: 配置中 delay 字段类型需为 Number.'\n    },\n    beforeReport: {\n      validate(val) {\n        if (!isFunction(val)) {\n          throwErr(this.msgTypeErr);\n        }\n      },\n\n      msgTypeErr: 'SNIPER ERROR: 配置中 beforeReport 字段类型需为 Function.'\n    }\n  };\n\n  function proxyValidate() {\n    const proxyObj = {};\n    return new Proxy(proxyObj, {\n      set(target, key, val) {\n        strategies[key].validate(val); // eslint-disable-next-line no-param-reassign\n\n        target[key] = val;\n        return true;\n      }\n\n    });\n  }\n\n  function validateConfig(config) {\n    const proxy = proxyValidate();\n    Object.keys(config).forEach(prop => {\n      proxy[prop] = config[prop];\n    });\n  }\n\n  let BehaviorReporter = /*#__PURE__*/function () {\n    function BehaviorReporter() {\n      _classCallCheck(this, BehaviorReporter);\n\n      this.logQueue = [];\n      this.config = {\n        url: '',\n        appkey: '',\n        // 以后商业化要用到的\n        delay: 1000,\n        // 延迟, 合并上报\n        appVersion: '',\n        // 应用Version\n        env: '',\n\n        // 环境\n        beforeReport(log) {\n          // 1.可在这里劫持上报的数据, 比如添加userid, session等等\n          // 2.如果return false, 则不用内置http上报, 此时可以在这里自定义自己的http上报方式\n          //   比如以后浏览器端，可以自定义 ajax 上报还是用图片上报\n          return log;\n        }\n\n      };\n      this.applyRequested = false;\n      this.delayTimer = -1;\n    }\n\n    _createClass(BehaviorReporter, [{\n      key: \"mergeConfig\",\n      value: function mergeConfig(opts) {\n        validateConfig(opts);\n        this.config = extend(this.config, opts);\n      }\n    }, {\n      key: \"addLog\",\n      value: function addLog(log) {\n        this.logQueue.push(log);\n        return this;\n      }\n    }, {\n      key: \"getLog\",\n      value: function getLog() {\n        return this.logQueue.slice();\n      }\n    }, {\n      key: \"clearLog\",\n      value: function clearLog() {\n        this.logQueue = [];\n        return this;\n      }\n    }, {\n      key: \"report\",\n      value: function report() {\n        const curLogQueue = this.getLog();\n\n        if (this.config.delay > 0) {\n          if (this.delayTimer) {\n            clearTimeout(this.delayTimer);\n          }\n\n          this.delayTimer = setTimeout(() => {\n            this.sendLog(curLogQueue);\n          }, this.config.delay);\n        } else {\n          this.sendLog(curLogQueue);\n        }\n      }\n    }, {\n      key: \"gLog\",\n      value: function gLog(log) {\n        const {\n          appVersion,\n          env\n        } = this.config;\n        return _objectSpread2$1(_objectSpread2$1({}, getMeta()), {}, {\n          appVersion,\n          env,\n          logs: log\n        });\n      }\n    }, {\n      key: \"sendLog\",\n      value: function sendLog(logQueue = []) {\n        const log = logQueue.slice();\n        if (!log.length) return;\n        const data = this.gLog(log);\n        const ret = isFunction(this.config.beforeReport) && this.config.beforeReport.call(this, data); // 异步回调\n\n        if (isPromise(ret)) {\n          ret.then(res => {\n            if (isBoolean(res) && res === false) {\n              // 用户阻止默认上报后，可在 beforeReport 可自定义 request 上报\n              return;\n            }\n\n            this.startReport(res);\n          });\n        } else {\n          if (isBoolean(ret) && ret === false) {\n            // 用户阻止默认上报后，可在 beforeReport 可自定义 request 上报\n            return;\n          }\n\n          this.startReport(ret);\n        }\n      }\n    }, {\n      key: \"startReport\",\n      value: function startReport(data) {\n        this.clearLog(); // 默认上报\n\n        this.request({\n          url: this.config.url,\n          method: 'POST',\n          data\n        });\n      }\n    }, {\n      key: \"use\",\n      value: function use(plugin, ...args) {\n        plugin.init(this, ...args);\n      }\n    }, {\n      key: \"applyRequest\",\n      value: function applyRequest(request) {\n        if (this.applyRequested) return false;\n        this.request = request;\n        this.applyRequested = true;\n        return true;\n      }\n    }]);\n\n    return BehaviorReporter;\n  }();\n\n  function createCommonjsModule(fn, basedir, module) {\n    return module = {\n      path: basedir,\n      exports: {},\n      require: function (path, base) {\n        return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n      }\n    }, fn(module, module.exports), module.exports;\n  }\n\n  function commonjsRequire() {\n    throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n  }\n\n  var runtime_1 = createCommonjsModule(function (module) {\n    /**\n     * Copyright (c) 2014-present, Facebook, Inc.\n     *\n     * This source code is licensed under the MIT license found in the\n     * LICENSE file in the root directory of this source tree.\n     */\n    var runtime = function (exports) {\n      var Op = Object.prototype;\n      var hasOwn = Op.hasOwnProperty;\n      var undefined$1; // More compressible than void 0.\n\n      var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n      var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n      var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n      var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n      function wrap(innerFn, outerFn, self, tryLocsList) {\n        // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n        var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n        var generator = Object.create(protoGenerator.prototype);\n        var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n        // .throw, and .return methods.\n\n        generator._invoke = makeInvokeMethod(innerFn, self, context);\n        return generator;\n      }\n\n      exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n      // record like context.tryEntries[i].completion. This interface could\n      // have been (and was previously) designed to take a closure to be\n      // invoked without arguments, but in all the cases we care about we\n      // already have an existing method we want to call, so there's no need\n      // to create a new function object. We can even get away with assuming\n      // the method takes exactly one argument, since that happens to be true\n      // in every case, so we don't have to touch the arguments object. The\n      // only additional allocation required is the completion record, which\n      // has a stable shape and so hopefully should be cheap to allocate.\n\n      function tryCatch(fn, obj, arg) {\n        try {\n          return {\n            type: \"normal\",\n            arg: fn.call(obj, arg)\n          };\n        } catch (err) {\n          return {\n            type: \"throw\",\n            arg: err\n          };\n        }\n      }\n\n      var GenStateSuspendedStart = \"suspendedStart\";\n      var GenStateSuspendedYield = \"suspendedYield\";\n      var GenStateExecuting = \"executing\";\n      var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n      // breaking out of the dispatch switch statement.\n\n      var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n      // .constructor.prototype properties for functions that return Generator\n      // objects. For full spec compliance, you may wish to configure your\n      // minifier not to mangle the names of these two functions.\n\n      function Generator() {}\n\n      function GeneratorFunction() {}\n\n      function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n      // don't natively support it.\n\n\n      var IteratorPrototype = {};\n\n      IteratorPrototype[iteratorSymbol] = function () {\n        return this;\n      };\n\n      var getProto = Object.getPrototypeOf;\n      var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n      if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n        // This environment has a native %IteratorPrototype%; use it instead\n        // of the polyfill.\n        IteratorPrototype = NativeIteratorPrototype;\n      }\n\n      var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n      GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n      GeneratorFunctionPrototype.constructor = GeneratorFunction;\n      GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n      // Iterator interface in terms of a single ._invoke method.\n\n      function defineIteratorMethods(prototype) {\n        [\"next\", \"throw\", \"return\"].forEach(function (method) {\n          prototype[method] = function (arg) {\n            return this._invoke(method, arg);\n          };\n        });\n      }\n\n      exports.isGeneratorFunction = function (genFun) {\n        var ctor = typeof genFun === \"function\" && genFun.constructor;\n        return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n      };\n\n      exports.mark = function (genFun) {\n        if (Object.setPrototypeOf) {\n          Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n        } else {\n          genFun.__proto__ = GeneratorFunctionPrototype;\n\n          if (!(toStringTagSymbol in genFun)) {\n            genFun[toStringTagSymbol] = \"GeneratorFunction\";\n          }\n        }\n\n        genFun.prototype = Object.create(Gp);\n        return genFun;\n      }; // Within the body of any async function, `await x` is transformed to\n      // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n      // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n      // meant to be awaited.\n\n\n      exports.awrap = function (arg) {\n        return {\n          __await: arg\n        };\n      };\n\n      function AsyncIterator(generator, PromiseImpl) {\n        function invoke(method, arg, resolve, reject) {\n          var record = tryCatch(generator[method], generator, arg);\n\n          if (record.type === \"throw\") {\n            reject(record.arg);\n          } else {\n            var result = record.arg;\n            var value = result.value;\n\n            if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n              return PromiseImpl.resolve(value.__await).then(function (value) {\n                invoke(\"next\", value, resolve, reject);\n              }, function (err) {\n                invoke(\"throw\", err, resolve, reject);\n              });\n            }\n\n            return PromiseImpl.resolve(value).then(function (unwrapped) {\n              // When a yielded Promise is resolved, its final value becomes\n              // the .value of the Promise<{value,done}> result for the\n              // current iteration.\n              result.value = unwrapped;\n              resolve(result);\n            }, function (error) {\n              // If a rejected Promise was yielded, throw the rejection back\n              // into the async generator function so it can be handled there.\n              return invoke(\"throw\", error, resolve, reject);\n            });\n          }\n        }\n\n        var previousPromise;\n\n        function enqueue(method, arg) {\n          function callInvokeWithMethodAndArg() {\n            return new PromiseImpl(function (resolve, reject) {\n              invoke(method, arg, resolve, reject);\n            });\n          }\n\n          return previousPromise = // If enqueue has been called before, then we want to wait until\n          // all previous Promises have been resolved before calling invoke,\n          // so that results are always delivered in the correct order. If\n          // enqueue has not been called before, then it is important to\n          // call invoke immediately, without waiting on a callback to fire,\n          // so that the async generator function has the opportunity to do\n          // any necessary setup in a predictable way. This predictability\n          // is why the Promise constructor synchronously invokes its\n          // executor callback, and why async functions synchronously\n          // execute code before the first await. Since we implement simple\n          // async functions in terms of async generators, it is especially\n          // important to get this right, even though it requires care.\n          previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n        } // Define the unified helper method that is used to implement .next,\n        // .throw, and .return (see defineIteratorMethods).\n\n\n        this._invoke = enqueue;\n      }\n\n      defineIteratorMethods(AsyncIterator.prototype);\n\n      AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n        return this;\n      };\n\n      exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n      // AsyncIterator objects; they just return a Promise for the value of\n      // the final result produced by the iterator.\n\n      exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n        if (PromiseImpl === void 0) PromiseImpl = Promise;\n        var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n        return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n        : iter.next().then(function (result) {\n          return result.done ? result.value : iter.next();\n        });\n      };\n\n      function makeInvokeMethod(innerFn, self, context) {\n        var state = GenStateSuspendedStart;\n        return function invoke(method, arg) {\n          if (state === GenStateExecuting) {\n            throw new Error(\"Generator is already running\");\n          }\n\n          if (state === GenStateCompleted) {\n            if (method === \"throw\") {\n              throw arg;\n            } // Be forgiving, per 25.3.3.3.3 of the spec:\n            // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n            return doneResult();\n          }\n\n          context.method = method;\n          context.arg = arg;\n\n          while (true) {\n            var delegate = context.delegate;\n\n            if (delegate) {\n              var delegateResult = maybeInvokeDelegate(delegate, context);\n\n              if (delegateResult) {\n                if (delegateResult === ContinueSentinel) continue;\n                return delegateResult;\n              }\n            }\n\n            if (context.method === \"next\") {\n              // Setting context._sent for legacy support of Babel's\n              // function.sent implementation.\n              context.sent = context._sent = context.arg;\n            } else if (context.method === \"throw\") {\n              if (state === GenStateSuspendedStart) {\n                state = GenStateCompleted;\n                throw context.arg;\n              }\n\n              context.dispatchException(context.arg);\n            } else if (context.method === \"return\") {\n              context.abrupt(\"return\", context.arg);\n            }\n\n            state = GenStateExecuting;\n            var record = tryCatch(innerFn, self, context);\n\n            if (record.type === \"normal\") {\n              // If an exception is thrown from innerFn, we leave state ===\n              // GenStateExecuting and loop back for another invocation.\n              state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n              if (record.arg === ContinueSentinel) {\n                continue;\n              }\n\n              return {\n                value: record.arg,\n                done: context.done\n              };\n            } else if (record.type === \"throw\") {\n              state = GenStateCompleted; // Dispatch the exception by looping back around to the\n              // context.dispatchException(context.arg) call above.\n\n              context.method = \"throw\";\n              context.arg = record.arg;\n            }\n          }\n        };\n      } // Call delegate.iterator[context.method](context.arg) and handle the\n      // result, either by returning a { value, done } result from the\n      // delegate iterator, or by modifying context.method and context.arg,\n      // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n      function maybeInvokeDelegate(delegate, context) {\n        var method = delegate.iterator[context.method];\n\n        if (method === undefined$1) {\n          // A .throw or .return when the delegate iterator has no .throw\n          // method always terminates the yield* loop.\n          context.delegate = null;\n\n          if (context.method === \"throw\") {\n            // Note: [\"return\"] must be used for ES3 parsing compatibility.\n            if (delegate.iterator[\"return\"]) {\n              // If the delegate iterator has a return method, give it a\n              // chance to clean up.\n              context.method = \"return\";\n              context.arg = undefined$1;\n              maybeInvokeDelegate(delegate, context);\n\n              if (context.method === \"throw\") {\n                // If maybeInvokeDelegate(context) changed context.method from\n                // \"return\" to \"throw\", let that override the TypeError below.\n                return ContinueSentinel;\n              }\n            }\n\n            context.method = \"throw\";\n            context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n          }\n\n          return ContinueSentinel;\n        }\n\n        var record = tryCatch(method, delegate.iterator, context.arg);\n\n        if (record.type === \"throw\") {\n          context.method = \"throw\";\n          context.arg = record.arg;\n          context.delegate = null;\n          return ContinueSentinel;\n        }\n\n        var info = record.arg;\n\n        if (!info) {\n          context.method = \"throw\";\n          context.arg = new TypeError(\"iterator result is not an object\");\n          context.delegate = null;\n          return ContinueSentinel;\n        }\n\n        if (info.done) {\n          // Assign the result of the finished delegate to the temporary\n          // variable specified by delegate.resultName (see delegateYield).\n          context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n          context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n          // exception, let the outer generator proceed normally. If\n          // context.method was \"next\", forget context.arg since it has been\n          // \"consumed\" by the delegate iterator. If context.method was\n          // \"return\", allow the original .return call to continue in the\n          // outer generator.\n\n          if (context.method !== \"return\") {\n            context.method = \"next\";\n            context.arg = undefined$1;\n          }\n        } else {\n          // Re-yield the result returned by the delegate method.\n          return info;\n        } // The delegate iterator is finished, so forget it and continue with\n        // the outer generator.\n\n\n        context.delegate = null;\n        return ContinueSentinel;\n      } // Define Generator.prototype.{next,throw,return} in terms of the\n      // unified ._invoke helper method.\n\n\n      defineIteratorMethods(Gp);\n      Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n      // @@iterator function is called on it. Some browsers' implementations of the\n      // iterator prototype chain incorrectly implement this, causing the Generator\n      // object to not be returned from this call. This ensures that doesn't happen.\n      // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n      Gp[iteratorSymbol] = function () {\n        return this;\n      };\n\n      Gp.toString = function () {\n        return \"[object Generator]\";\n      };\n\n      function pushTryEntry(locs) {\n        var entry = {\n          tryLoc: locs[0]\n        };\n\n        if (1 in locs) {\n          entry.catchLoc = locs[1];\n        }\n\n        if (2 in locs) {\n          entry.finallyLoc = locs[2];\n          entry.afterLoc = locs[3];\n        }\n\n        this.tryEntries.push(entry);\n      }\n\n      function resetTryEntry(entry) {\n        var record = entry.completion || {};\n        record.type = \"normal\";\n        delete record.arg;\n        entry.completion = record;\n      }\n\n      function Context(tryLocsList) {\n        // The root entry object (effectively a try statement without a catch\n        // or a finally block) gives us a place to store values thrown from\n        // locations where there is no enclosing try statement.\n        this.tryEntries = [{\n          tryLoc: \"root\"\n        }];\n        tryLocsList.forEach(pushTryEntry, this);\n        this.reset(true);\n      }\n\n      exports.keys = function (object) {\n        var keys = [];\n\n        for (var key in object) {\n          keys.push(key);\n        }\n\n        keys.reverse(); // Rather than returning an object with a next method, we keep\n        // things simple and return the next function itself.\n\n        return function next() {\n          while (keys.length) {\n            var key = keys.pop();\n\n            if (key in object) {\n              next.value = key;\n              next.done = false;\n              return next;\n            }\n          } // To avoid creating an additional object, we just hang the .value\n          // and .done properties off the next function object itself. This\n          // also ensures that the minifier will not anonymize the function.\n\n\n          next.done = true;\n          return next;\n        };\n      };\n\n      function values(iterable) {\n        if (iterable) {\n          var iteratorMethod = iterable[iteratorSymbol];\n\n          if (iteratorMethod) {\n            return iteratorMethod.call(iterable);\n          }\n\n          if (typeof iterable.next === \"function\") {\n            return iterable;\n          }\n\n          if (!isNaN(iterable.length)) {\n            var i = -1,\n                next = function next() {\n              while (++i < iterable.length) {\n                if (hasOwn.call(iterable, i)) {\n                  next.value = iterable[i];\n                  next.done = false;\n                  return next;\n                }\n              }\n\n              next.value = undefined$1;\n              next.done = true;\n              return next;\n            };\n\n            return next.next = next;\n          }\n        } // Return an iterator with no values.\n\n\n        return {\n          next: doneResult\n        };\n      }\n\n      exports.values = values;\n\n      function doneResult() {\n        return {\n          value: undefined$1,\n          done: true\n        };\n      }\n\n      Context.prototype = {\n        constructor: Context,\n        reset: function (skipTempReset) {\n          this.prev = 0;\n          this.next = 0; // Resetting context._sent for legacy support of Babel's\n          // function.sent implementation.\n\n          this.sent = this._sent = undefined$1;\n          this.done = false;\n          this.delegate = null;\n          this.method = \"next\";\n          this.arg = undefined$1;\n          this.tryEntries.forEach(resetTryEntry);\n\n          if (!skipTempReset) {\n            for (var name in this) {\n              // Not sure about the optimal order of these conditions:\n              if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n                this[name] = undefined$1;\n              }\n            }\n          }\n        },\n        stop: function () {\n          this.done = true;\n          var rootEntry = this.tryEntries[0];\n          var rootRecord = rootEntry.completion;\n\n          if (rootRecord.type === \"throw\") {\n            throw rootRecord.arg;\n          }\n\n          return this.rval;\n        },\n        dispatchException: function (exception) {\n          if (this.done) {\n            throw exception;\n          }\n\n          var context = this;\n\n          function handle(loc, caught) {\n            record.type = \"throw\";\n            record.arg = exception;\n            context.next = loc;\n\n            if (caught) {\n              // If the dispatched exception was caught by a catch block,\n              // then let that catch block handle the exception normally.\n              context.method = \"next\";\n              context.arg = undefined$1;\n            }\n\n            return !!caught;\n          }\n\n          for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n            var entry = this.tryEntries[i];\n            var record = entry.completion;\n\n            if (entry.tryLoc === \"root\") {\n              // Exception thrown outside of any try block that could handle\n              // it, so set the completion value of the entire function to\n              // throw the exception.\n              return handle(\"end\");\n            }\n\n            if (entry.tryLoc <= this.prev) {\n              var hasCatch = hasOwn.call(entry, \"catchLoc\");\n              var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n              if (hasCatch && hasFinally) {\n                if (this.prev < entry.catchLoc) {\n                  return handle(entry.catchLoc, true);\n                } else if (this.prev < entry.finallyLoc) {\n                  return handle(entry.finallyLoc);\n                }\n              } else if (hasCatch) {\n                if (this.prev < entry.catchLoc) {\n                  return handle(entry.catchLoc, true);\n                }\n              } else if (hasFinally) {\n                if (this.prev < entry.finallyLoc) {\n                  return handle(entry.finallyLoc);\n                }\n              } else {\n                throw new Error(\"try statement without catch or finally\");\n              }\n            }\n          }\n        },\n        abrupt: function (type, arg) {\n          for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n            var entry = this.tryEntries[i];\n\n            if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n              var finallyEntry = entry;\n              break;\n            }\n          }\n\n          if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n            // Ignore the finally entry if control is not jumping to a\n            // location outside the try/catch block.\n            finallyEntry = null;\n          }\n\n          var record = finallyEntry ? finallyEntry.completion : {};\n          record.type = type;\n          record.arg = arg;\n\n          if (finallyEntry) {\n            this.method = \"next\";\n            this.next = finallyEntry.finallyLoc;\n            return ContinueSentinel;\n          }\n\n          return this.complete(record);\n        },\n        complete: function (record, afterLoc) {\n          if (record.type === \"throw\") {\n            throw record.arg;\n          }\n\n          if (record.type === \"break\" || record.type === \"continue\") {\n            this.next = record.arg;\n          } else if (record.type === \"return\") {\n            this.rval = this.arg = record.arg;\n            this.method = \"return\";\n            this.next = \"end\";\n          } else if (record.type === \"normal\" && afterLoc) {\n            this.next = afterLoc;\n          }\n\n          return ContinueSentinel;\n        },\n        finish: function (finallyLoc) {\n          for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n            var entry = this.tryEntries[i];\n\n            if (entry.finallyLoc === finallyLoc) {\n              this.complete(entry.completion, entry.afterLoc);\n              resetTryEntry(entry);\n              return ContinueSentinel;\n            }\n          }\n        },\n        \"catch\": function (tryLoc) {\n          for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n            var entry = this.tryEntries[i];\n\n            if (entry.tryLoc === tryLoc) {\n              var record = entry.completion;\n\n              if (record.type === \"throw\") {\n                var thrown = record.arg;\n                resetTryEntry(entry);\n              }\n\n              return thrown;\n            }\n          } // The context.catch method must only be called with a location\n          // argument that corresponds to a known catch block.\n\n\n          throw new Error(\"illegal catch attempt\");\n        },\n        delegateYield: function (iterable, resultName, nextLoc) {\n          this.delegate = {\n            iterator: values(iterable),\n            resultName: resultName,\n            nextLoc: nextLoc\n          };\n\n          if (this.method === \"next\") {\n            // Deliberately forget the last sent value so that we don't\n            // accidentally pass it on to the delegate.\n            this.arg = undefined$1;\n          }\n\n          return ContinueSentinel;\n        }\n      }; // Regardless of whether this script is executing as a CommonJS module\n      // or not, return the runtime object so that we can declare the variable\n      // regeneratorRuntime in the outer scope, which allows this module to be\n      // injected easily by `bin/regenerator --include-runtime script.js`.\n\n      return exports;\n    }( // If this script is executing as a CommonJS module, use module.exports\n    // as the regeneratorRuntime namespace. Otherwise create a new empty\n    // object. Either way, the resulting object will be used to initialize\n    // the regeneratorRuntime variable at the top of this file.\n    module.exports);\n\n    try {\n      regeneratorRuntime = runtime;\n    } catch (accidentalStrictMode) {\n      // This module should not be running in strict mode, so the above\n      // assignment should always work unless something is misconfigured. Just\n      // in case runtime.js accidentally runs in strict mode, we can escape\n      // strict mode using a global Function call. This could conceivably fail\n      // if a Content Security Policy forbids using Function, but in that case\n      // the proper solution is to fix the accidental strict mode problem. If\n      // you've misconfigured your bundler to force strict mode and applied a\n      // CSP to forbid Function, and you're not willing to fix either of those\n      // problems, please detail your unique predicament in a GitHub issue.\n      Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n    }\n  });\n\n  const errorTypeReg = new RegExp('(' + ['EvalError:', 'InternalError:', 'RangeError:', 'ReferenceError:', 'SyntaxError:', 'TypeError:', 'URIError:', 'Error:' // new Error\n  ].join('|') + ')', 'mi');\n\n  /* eslint-disable key-spacing */\n\n  function parseScriptRuntimeError(stack = '') {\n    try {\n      let line = '',\n          col = '',\n          file = '';\n      const errInfoList = stack.split(/\\n\\s+/);\n      const errMsg = errInfoList[0];\n      const errStack = errInfoList.slice(1);\n      const type = errMsg.match(errorTypeReg)[0].replace(/:$/, '') || '';\n      const value = errMsg.split(/\\n/).pop().split(':')[1].trim(); // 有可能没有stack信息，如在app.js生命周期里面\bthrow error\n\n      console.log('errInfoList-----', errStack);\n\n      if (errStack.length) {\n        // :(\\d+:\\d+) =>  :29:13\n        // eslint-disable-next-line\n        [line = '', col = ''] = (/:(\\d+:\\d+)/.exec(errStack[0])[1] || '').split(':'); // \\w+:\\/\\/+    => weapp:///\n        // https?:\\/\\/  => http:// or https://\n        // eslint-disable-next-line\n\n        file = (/(\\w+:\\/\\/+|https?:\\/\\/).+:\\d+:\\d+/.exec(errStack[0])[0] || '').replace(/:\\d+:\\d+$/, '') || '';\n      }\n\n      return {\n        line,\n        col,\n        file,\n        stack,\n        type,\n        value\n      };\n    } catch (err) {\n      return {\n        stack,\n        type: 'Error'\n      };\n    }\n  }\n\n  function parseStaticError(event, target) {\n    const url = target.src || target.href;\n    return {\n      stack: url,\n      file: url,\n      type: \"ReferenceError\",\n      value: '资源加载异常'\n    };\n  }\n\n  /* eslint-disable no-undef */\n  const pluginHookApp = {\n    init(core) {\n      // 一：捕获正常错误和资源加载错误\n      window.addEventListener('error', event => {\n        const target = event.target || event.srcElement;\n        const isElementTarget = target instanceof HTMLScriptElement || target instanceof HTMLLinkElement || target instanceof HTMLImageElement;\n\n        const __log = isElementTarget ? parseStaticError(event, target) : parseScriptRuntimeError(event.error.stack);\n\n        core.addLog(__log);\n        console.log('core----', core); // core.report();\n      }, true); // 二：捕获console.error错误\n      // console.error = (func => {\n      //   return (...args) => {\n      //     core.addLog(...args);\n      //     func.apply(console, args);\n      //   }\n      // })(console.error);\n      // 三：捕获Promise错误\n\n      window.addEventListener('unhandledrejection', e => {\n        console.log(`Promise.reject()中的内容，告诉你发生错误的原因:${e.reason}`);\n        console.log(`Promise对象 :${e.promise}`);\n      });\n    }\n\n  };\n\n  function Request(config) {\n    const {\n      url,\n      method,\n      data\n    } = config;\n    let xhr = new XMLHttpRequest();\n    xhr.open(method, url, true);\n    xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded');\n    xhr.send('ue=' + JSON.stringify(data));\n    return xhr;\n  }\n\n  let Reportor = /*#__PURE__*/function (_BehaviorReporter) {\n    _inherits(Reportor, _BehaviorReporter);\n\n    var _super = _createSuper(Reportor);\n\n    function Reportor(opts = {}) {\n      var _this;\n\n      _classCallCheck(this, Reportor);\n\n      _this = _super.call(this, opts); // 合并参数\n\n      _this.mergeConfig(opts);\n\n      _this.init();\n\n      return _this;\n    }\n\n    _createClass(Reportor, [{\n      key: \"init\",\n      value: function init() {\n        // 劫持 App onError\n        // this.use(addEventListener);\n        this.use(pluginHookApp); // // 劫持 Request\n        // this.use(pluginHookRq);\n        // this.use(pluginPatchPromise);\n\n        this.applyRequest(Request);\n      }\n    }]);\n\n    return Reportor;\n  }(BehaviorReporter);\n\n  return Reportor;\n\n})));\n"]}]}