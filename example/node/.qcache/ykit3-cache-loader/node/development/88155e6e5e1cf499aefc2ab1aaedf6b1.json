{"remainingRequest":"/Users/Aaron/Desktop/work/qunar/work/ykit3/packages/ykit3-cli/node_modules/babel-loader/lib/index.js??ref--4-2!/Users/Aaron/Desktop/work/qunar/work/sniperjs/example/node/node_modules/core-js/modules/es7.string.match-all.js","dependencies":[{"path":"/Users/Aaron/Desktop/work/qunar/work/sniperjs/example/node/node_modules/core-js/modules/es7.string.match-all.js","hash":"552bd95f879e48c5e2088853ac1afdac"},{"path":"/Users/Aaron/Desktop/work/qunar/work/ykit3/packages/ykit3-cli/node_modules/cache-loader-hash/dist/cjs.js","hash":"d62e2d390167bf8193569f1644327c55"},{"path":"/Users/Aaron/Desktop/work/qunar/work/ykit3/packages/ykit3-cli/node_modules/babel-loader/lib/index.js","hash":"19adf3159c902f1ed7907f3931384270"}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOyAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL1N0cmluZy5wcm90b3R5cGUubWF0Y2hBbGwvCgp2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpOwoKdmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7Cgp2YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTsKCnZhciBpc1JlZ0V4cCA9IHJlcXVpcmUoJy4vX2lzLXJlZ2V4cCcpOwoKdmFyIGdldEZsYWdzID0gcmVxdWlyZSgnLi9fZmxhZ3MnKTsKCnZhciBSZWdFeHBQcm90byA9IFJlZ0V4cC5wcm90b3R5cGU7Cgp2YXIgJFJlZ0V4cFN0cmluZ0l0ZXJhdG9yID0gZnVuY3Rpb24gJFJlZ0V4cFN0cmluZ0l0ZXJhdG9yKHJlZ2V4cCwgc3RyaW5nKSB7CiAgdGhpcy5fciA9IHJlZ2V4cDsKICB0aGlzLl9zID0gc3RyaW5nOwp9OwoKcmVxdWlyZSgnLi9faXRlci1jcmVhdGUnKSgkUmVnRXhwU3RyaW5nSXRlcmF0b3IsICdSZWdFeHAgU3RyaW5nJywgZnVuY3Rpb24gbmV4dCgpIHsKICB2YXIgbWF0Y2ggPSB0aGlzLl9yLmV4ZWModGhpcy5fcyk7CgogIHJldHVybiB7CiAgICB2YWx1ZTogbWF0Y2gsCiAgICBkb25lOiBtYXRjaCA9PT0gbnVsbAogIH07Cn0pOwoKJGV4cG9ydCgkZXhwb3J0LlAsICdTdHJpbmcnLCB7CiAgbWF0Y2hBbGw6IGZ1bmN0aW9uIG1hdGNoQWxsKHJlZ2V4cCkgewogICAgZGVmaW5lZCh0aGlzKTsKICAgIGlmICghaXNSZWdFeHAocmVnZXhwKSkgdGhyb3cgVHlwZUVycm9yKHJlZ2V4cCArICcgaXMgbm90IGEgcmVnZXhwIScpOwogICAgdmFyIFMgPSBTdHJpbmcodGhpcyk7CiAgICB2YXIgZmxhZ3MgPSAnZmxhZ3MnIGluIFJlZ0V4cFByb3RvID8gU3RyaW5nKHJlZ2V4cC5mbGFncykgOiBnZXRGbGFncy5jYWxsKHJlZ2V4cCk7CiAgICB2YXIgcnggPSBuZXcgUmVnRXhwKHJlZ2V4cC5zb3VyY2UsIH5mbGFncy5pbmRleE9mKCdnJykgPyBmbGFncyA6ICdnJyArIGZsYWdzKTsKICAgIHJ4Lmxhc3RJbmRleCA9IHRvTGVuZ3RoKHJlZ2V4cC5sYXN0SW5kZXgpOwogICAgcmV0dXJuIG5ldyAkUmVnRXhwU3RyaW5nSXRlcmF0b3IocngsIFMpOwogIH0KfSk7"},{"version":3,"sources":["/Users/Aaron/Desktop/work/qunar/work/sniperjs/example/node/node_modules/core-js/modules/es7.string.match-all.js"],"names":["$export","require","defined","toLength","isRegExp","getFlags","RegExpProto","RegExp","prototype","$RegExpStringIterator","regexp","string","_r","_s","next","match","exec","value","done","P","matchAll","TypeError","S","String","flags","call","rx","source","indexOf","lastIndex"],"mappings":"AAAA,a,CACA;;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,YAAD,CAArB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIK,WAAW,GAAGC,MAAM,CAACC,SAAzB;;AAEA,IAAIC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAUC,MAAV,EAAkBC,MAAlB,EAA0B;AACpD,OAAKC,EAAL,GAAUF,MAAV;AACA,OAAKG,EAAL,GAAUF,MAAV;AACD,CAHD;;AAKAV,OAAO,CAAC,gBAAD,CAAP,CAA0BQ,qBAA1B,EAAiD,eAAjD,EAAkE,SAASK,IAAT,GAAgB;AAChF,MAAIC,KAAK,GAAG,KAAKH,EAAL,CAAQI,IAAR,CAAa,KAAKH,EAAlB,CAAZ;;AACA,SAAO;AAAEI,IAAAA,KAAK,EAAEF,KAAT;AAAgBG,IAAAA,IAAI,EAAEH,KAAK,KAAK;AAAhC,GAAP;AACD,CAHD;;AAKAf,OAAO,CAACA,OAAO,CAACmB,CAAT,EAAY,QAAZ,EAAsB;AAC3BC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBV,MAAlB,EAA0B;AAClCR,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,QAAI,CAACE,QAAQ,CAACM,MAAD,CAAb,EAAuB,MAAMW,SAAS,CAACX,MAAM,GAAG,mBAAV,CAAf;AACvB,QAAIY,CAAC,GAAGC,MAAM,CAAC,IAAD,CAAd;AACA,QAAIC,KAAK,GAAG,WAAWlB,WAAX,GAAyBiB,MAAM,CAACb,MAAM,CAACc,KAAR,CAA/B,GAAgDnB,QAAQ,CAACoB,IAAT,CAAcf,MAAd,CAA5D;AACA,QAAIgB,EAAE,GAAG,IAAInB,MAAJ,CAAWG,MAAM,CAACiB,MAAlB,EAA0B,CAACH,KAAK,CAACI,OAAN,CAAc,GAAd,CAAD,GAAsBJ,KAAtB,GAA8B,MAAMA,KAA9D,CAAT;AACAE,IAAAA,EAAE,CAACG,SAAH,GAAe1B,QAAQ,CAACO,MAAM,CAACmB,SAAR,CAAvB;AACA,WAAO,IAAIpB,qBAAJ,CAA0BiB,EAA1B,EAA8BJ,CAA9B,CAAP;AACD;AAT0B,CAAtB,CAAP","sourcesContent":["'use strict';\n// https://tc39.github.io/String.prototype.matchAll/\nvar $export = require('./_export');\nvar defined = require('./_defined');\nvar toLength = require('./_to-length');\nvar isRegExp = require('./_is-regexp');\nvar getFlags = require('./_flags');\nvar RegExpProto = RegExp.prototype;\n\nvar $RegExpStringIterator = function (regexp, string) {\n  this._r = regexp;\n  this._s = string;\n};\n\nrequire('./_iter-create')($RegExpStringIterator, 'RegExp String', function next() {\n  var match = this._r.exec(this._s);\n  return { value: match, done: match === null };\n});\n\n$export($export.P, 'String', {\n  matchAll: function matchAll(regexp) {\n    defined(this);\n    if (!isRegExp(regexp)) throw TypeError(regexp + ' is not a regexp!');\n    var S = String(this);\n    var flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp);\n    var rx = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);\n    rx.lastIndex = toLength(regexp.lastIndex);\n    return new $RegExpStringIterator(rx, S);\n  }\n});\n"]}]}