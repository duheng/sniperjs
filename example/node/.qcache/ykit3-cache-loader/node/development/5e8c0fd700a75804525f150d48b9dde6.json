{"remainingRequest":"/Users/Aaron/Desktop/work/qunar/work/ykit3/packages/ykit3-cli/node_modules/babel-loader/lib/index.js??ref--4-2!/Users/Aaron/Desktop/work/qunar/work/sniperjs/example/node/node_modules/core-js/modules/_array-copy-within.js","dependencies":[{"path":"/Users/Aaron/Desktop/work/qunar/work/sniperjs/example/node/node_modules/core-js/modules/_array-copy-within.js","hash":"19fe972416aced2848be3e5b20e79fa5"},{"path":"/Users/Aaron/Desktop/work/qunar/work/ykit3/packages/ykit3-cli/node_modules/cache-loader-hash/dist/cjs.js","hash":"d62e2d390167bf8193569f1644327c55"},{"path":"/Users/Aaron/Desktop/work/qunar/work/ykit3/packages/ykit3-cli/node_modules/babel-loader/lib/index.js","hash":"19adf3159c902f1ed7907f3931384270"}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gMjIuMS4zLjMgQXJyYXkucHJvdG90eXBlLmNvcHlXaXRoaW4odGFyZ2V0LCBzdGFydCwgZW5kID0gdGhpcy5sZW5ndGgpCid1c2Ugc3RyaWN0JzsKCnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpOwoKdmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7Cgp2YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTsKCm1vZHVsZS5leHBvcnRzID0gW10uY29weVdpdGhpbiB8fCBmdW5jdGlvbiBjb3B5V2l0aGluKHRhcmdldAovKiA9IDAgKi8KLCBzdGFydAovKiA9IDAsIGVuZCA9IEBsZW5ndGggKi8KKSB7CiAgdmFyIE8gPSB0b09iamVjdCh0aGlzKTsKICB2YXIgbGVuID0gdG9MZW5ndGgoTy5sZW5ndGgpOwogIHZhciB0byA9IHRvQWJzb2x1dGVJbmRleCh0YXJnZXQsIGxlbik7CiAgdmFyIGZyb20gPSB0b0Fic29sdXRlSW5kZXgoc3RhcnQsIGxlbik7CiAgdmFyIGVuZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAyID8gYXJndW1lbnRzWzJdIDogdW5kZWZpbmVkOwogIHZhciBjb3VudCA9IE1hdGgubWluKChlbmQgPT09IHVuZGVmaW5lZCA/IGxlbiA6IHRvQWJzb2x1dGVJbmRleChlbmQsIGxlbikpIC0gZnJvbSwgbGVuIC0gdG8pOwogIHZhciBpbmMgPSAxOwoKICBpZiAoZnJvbSA8IHRvICYmIHRvIDwgZnJvbSArIGNvdW50KSB7CiAgICBpbmMgPSAtMTsKICAgIGZyb20gKz0gY291bnQgLSAxOwogICAgdG8gKz0gY291bnQgLSAxOwogIH0KCiAgd2hpbGUgKGNvdW50LS0gPiAwKSB7CiAgICBpZiAoZnJvbSBpbiBPKSBPW3RvXSA9IE9bZnJvbV07ZWxzZSBkZWxldGUgT1t0b107CiAgICB0byArPSBpbmM7CiAgICBmcm9tICs9IGluYzsKICB9CgogIHJldHVybiBPOwp9Ow=="},{"version":3,"sources":["/Users/Aaron/Desktop/work/qunar/work/sniperjs/example/node/node_modules/core-js/modules/_array-copy-within.js"],"names":["toObject","require","toAbsoluteIndex","toLength","module","exports","copyWithin","target","start","O","len","length","to","from","end","arguments","undefined","count","Math","min","inc"],"mappings":"AAAA;AACA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,sBAAD,CAA7B;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,cAAD,CAAtB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,GAAGC,UAAH,IAAiB,SAASA,UAAT,CAAoBC;AAAO;AAA3B,EAAsCC;AAAM;AAA5C,EAAsE;AACtG,MAAIC,CAAC,GAAGT,QAAQ,CAAC,IAAD,CAAhB;AACA,MAAIU,GAAG,GAAGP,QAAQ,CAACM,CAAC,CAACE,MAAH,CAAlB;AACA,MAAIC,EAAE,GAAGV,eAAe,CAACK,MAAD,EAASG,GAAT,CAAxB;AACA,MAAIG,IAAI,GAAGX,eAAe,CAACM,KAAD,EAAQE,GAAR,CAA1B;AACA,MAAII,GAAG,GAAGC,SAAS,CAACJ,MAAV,GAAmB,CAAnB,GAAuBI,SAAS,CAAC,CAAD,CAAhC,GAAsCC,SAAhD;AACA,MAAIC,KAAK,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACL,GAAG,KAAKE,SAAR,GAAoBN,GAApB,GAA0BR,eAAe,CAACY,GAAD,EAAMJ,GAAN,CAA1C,IAAwDG,IAAjE,EAAuEH,GAAG,GAAGE,EAA7E,CAAZ;AACA,MAAIQ,GAAG,GAAG,CAAV;;AACA,MAAIP,IAAI,GAAGD,EAAP,IAAaA,EAAE,GAAGC,IAAI,GAAGI,KAA7B,EAAoC;AAClCG,IAAAA,GAAG,GAAG,CAAC,CAAP;AACAP,IAAAA,IAAI,IAAII,KAAK,GAAG,CAAhB;AACAL,IAAAA,EAAE,IAAIK,KAAK,GAAG,CAAd;AACD;;AACD,SAAOA,KAAK,KAAK,CAAjB,EAAoB;AAClB,QAAIJ,IAAI,IAAIJ,CAAZ,EAAeA,CAAC,CAACG,EAAD,CAAD,GAAQH,CAAC,CAACI,IAAD,CAAT,CAAf,KACK,OAAOJ,CAAC,CAACG,EAAD,CAAR;AACLA,IAAAA,EAAE,IAAIQ,GAAN;AACAP,IAAAA,IAAI,IAAIO,GAAR;AACD;;AAAC,SAAOX,CAAP;AACH,CAnBD","sourcesContent":["// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\n\nmodule.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];\n    else delete O[to];\n    to += inc;\n    from += inc;\n  } return O;\n};\n"]}]}