{"remainingRequest":"/Users/qitmac001131/Desktop/work/ykit3/packages/ykit3-config-resolver/node_modules/babel-loader/lib/index.js??ref--4-2!/Users/qitmac001131/Desktop/test/sniperjs/example/node/node_modules/redux-actions/es/combineActions.js","dependencies":[{"path":"/Users/qitmac001131/Desktop/test/sniperjs/example/node/node_modules/redux-actions/es/combineActions.js","hash":"35eef2cd8640e224c86c5cb573123673"},{"path":"/Users/qitmac001131/Desktop/work/ykit3/packages/ykit3-config-resolver/node_modules/cache-loader-hash/dist/cjs.js","hash":"d62e2d390167bf8193569f1644327c55"},{"path":"/Users/qitmac001131/Desktop/work/ykit3/packages/ykit3-config-resolver/node_modules/babel-loader/lib/index.js","hash":"19adf3159c902f1ed7907f3931384270"}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSBjb21iaW5lQWN0aW9uczsKCnZhciBfaW52YXJpYW50ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJpbnZhcmlhbnQiKSk7Cgp2YXIgX2lzRnVuY3Rpb24gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4vdXRpbHMvaXNGdW5jdGlvbiIpKTsKCnZhciBfaXNTeW1ib2wgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4vdXRpbHMvaXNTeW1ib2wiKSk7Cgp2YXIgX2lzRW1wdHkgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4vdXRpbHMvaXNFbXB0eSIpKTsKCnZhciBfdG9TdHJpbmcgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4vdXRpbHMvdG9TdHJpbmciKSk7Cgp2YXIgX2lzU3RyaW5nID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL3V0aWxzL2lzU3RyaW5nIikpOwoKdmFyIF9jb25zdGFudHMgPSByZXF1aXJlKCIuL2NvbnN0YW50cyIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH0KCmZ1bmN0aW9uIGlzVmFsaWRBY3Rpb25UeXBlKHR5cGUpIHsKICByZXR1cm4gKDAsIF9pc1N0cmluZy5kZWZhdWx0KSh0eXBlKSB8fCAoMCwgX2lzRnVuY3Rpb24uZGVmYXVsdCkodHlwZSkgfHwgKDAsIF9pc1N5bWJvbC5kZWZhdWx0KSh0eXBlKTsKfQoKZnVuY3Rpb24gaXNWYWxpZEFjdGlvblR5cGVzKHR5cGVzKSB7CiAgaWYgKCgwLCBfaXNFbXB0eS5kZWZhdWx0KSh0eXBlcykpIHsKICAgIHJldHVybiBmYWxzZTsKICB9CgogIHJldHVybiB0eXBlcy5ldmVyeShpc1ZhbGlkQWN0aW9uVHlwZSk7Cn0KCmZ1bmN0aW9uIGNvbWJpbmVBY3Rpb25zKCkgewogIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhY3Rpb25zVHlwZXMgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7CiAgICBhY3Rpb25zVHlwZXNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07CiAgfQoKICAoMCwgX2ludmFyaWFudC5kZWZhdWx0KShpc1ZhbGlkQWN0aW9uVHlwZXMoYWN0aW9uc1R5cGVzKSwgJ0V4cGVjdGVkIGFjdGlvbiB0eXBlcyB0byBiZSBzdHJpbmdzLCBzeW1ib2xzLCBvciBhY3Rpb24gY3JlYXRvcnMnKTsKICB2YXIgY29tYmluZWRBY3Rpb25UeXBlID0gYWN0aW9uc1R5cGVzLm1hcChfdG9TdHJpbmcuZGVmYXVsdCkuam9pbihfY29uc3RhbnRzLkFDVElPTl9UWVBFX0RFTElNSVRFUik7CiAgcmV0dXJuIHsKICAgIHRvU3RyaW5nOiBmdW5jdGlvbiB0b1N0cmluZygpIHsKICAgICAgcmV0dXJuIGNvbWJpbmVkQWN0aW9uVHlwZTsKICAgIH0KICB9Owp9"},{"version":3,"sources":["/Users/qitmac001131/Desktop/test/sniperjs/example/node/node_modules/redux-actions/es/combineActions.js"],"names":["isValidActionType","type","isValidActionTypes","types","every","combineActions","_len","arguments","length","actionsTypes","Array","_key","combinedActionType","map","toString","join","ACTION_TYPE_DELIMITER"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AAC/B,SAAO,uBAASA,IAAT,KAAkB,yBAAWA,IAAX,CAAlB,IAAsC,uBAASA,IAAT,CAA7C;AACD;;AAED,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,MAAI,sBAAQA,KAAR,CAAJ,EAAoB;AAClB,WAAO,KAAP;AACD;;AAED,SAAOA,KAAK,CAACC,KAAN,CAAYJ,iBAAZ,CAAP;AACD;;AAEc,SAASK,cAAT,GAA0B;AACvC,OAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,YAAY,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAA5C,EAA6DK,IAAI,GAAG,CAAzE,EAA4EA,IAAI,GAAGL,IAAnF,EAAyFK,IAAI,EAA7F,EAAiG;AAC/FF,IAAAA,YAAY,CAACE,IAAD,CAAZ,GAAqBJ,SAAS,CAACI,IAAD,CAA9B;AACD;;AAED,0BAAUT,kBAAkB,CAACO,YAAD,CAA5B,EAA4C,kEAA5C;AACA,MAAIG,kBAAkB,GAAGH,YAAY,CAACI,GAAb,CAAiBC,iBAAjB,EAA2BC,IAA3B,CAAgCC,gCAAhC,CAAzB;AACA,SAAO;AACLF,IAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5B,aAAOF,kBAAP;AACD;AAHI,GAAP;AAKD","sourcesContent":["import invariant from 'invariant';\nimport isFunction from './utils/isFunction';\nimport isSymbol from './utils/isSymbol';\nimport isEmpty from './utils/isEmpty';\nimport toString from './utils/toString';\nimport isString from './utils/isString';\nimport { ACTION_TYPE_DELIMITER } from './constants';\n\nfunction isValidActionType(type) {\n  return isString(type) || isFunction(type) || isSymbol(type);\n}\n\nfunction isValidActionTypes(types) {\n  if (isEmpty(types)) {\n    return false;\n  }\n\n  return types.every(isValidActionType);\n}\n\nexport default function combineActions() {\n  for (var _len = arguments.length, actionsTypes = new Array(_len), _key = 0; _key < _len; _key++) {\n    actionsTypes[_key] = arguments[_key];\n  }\n\n  invariant(isValidActionTypes(actionsTypes), 'Expected action types to be strings, symbols, or action creators');\n  var combinedActionType = actionsTypes.map(toString).join(ACTION_TYPE_DELIMITER);\n  return {\n    toString: function toString() {\n      return combinedActionType;\n    }\n  };\n}"]}]}