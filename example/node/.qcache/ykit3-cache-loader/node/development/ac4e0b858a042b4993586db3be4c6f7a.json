{"remainingRequest":"/Users/qitmac001131/Desktop/work/ykit3/packages/ykit3-config-resolver/node_modules/babel-loader/lib/index.js??ref--4-2!/Users/qitmac001131/Desktop/test/sniperjs/example/node/node_modules/core-js/modules/es6.regexp.replace.js","dependencies":[{"path":"/Users/qitmac001131/Desktop/test/sniperjs/example/node/node_modules/core-js/modules/es6.regexp.replace.js","hash":"3fb7c7a1a49601b97b712583de1a3775"},{"path":"/Users/qitmac001131/Desktop/work/ykit3/packages/ykit3-config-resolver/node_modules/cache-loader-hash/dist/cjs.js","hash":"d62e2d390167bf8193569f1644327c55"},{"path":"/Users/qitmac001131/Desktop/work/ykit3/packages/ykit3-config-resolver/node_modules/babel-loader/lib/index.js","hash":"19adf3159c902f1ed7907f3931384270"}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKdmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7Cgp2YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTsKCnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpOwoKdmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTsKCnZhciBhZHZhbmNlU3RyaW5nSW5kZXggPSByZXF1aXJlKCcuL19hZHZhbmNlLXN0cmluZy1pbmRleCcpOwoKdmFyIHJlZ0V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYy1hYnN0cmFjdCcpOwoKdmFyIG1heCA9IE1hdGgubWF4Owp2YXIgbWluID0gTWF0aC5taW47CnZhciBmbG9vciA9IE1hdGguZmxvb3I7CnZhciBTVUJTVElUVVRJT05fU1lNQk9MUyA9IC9cJChbJCZgJ118XGRcZD98PFtePl0qPikvZzsKdmFyIFNVQlNUSVRVVElPTl9TWU1CT0xTX05PX05BTUVEID0gL1wkKFskJmAnXXxcZFxkPykvZzsKCnZhciBtYXliZVRvU3RyaW5nID0gZnVuY3Rpb24gbWF5YmVUb1N0cmluZyhpdCkgewogIHJldHVybiBpdCA9PT0gdW5kZWZpbmVkID8gaXQgOiBTdHJpbmcoaXQpOwp9OyAvLyBAQHJlcGxhY2UgbG9naWMKCgpyZXF1aXJlKCcuL19maXgtcmUtd2tzJykoJ3JlcGxhY2UnLCAyLCBmdW5jdGlvbiAoZGVmaW5lZCwgUkVQTEFDRSwgJHJlcGxhY2UsIG1heWJlQ2FsbE5hdGl2ZSkgewogIHJldHVybiBbLy8gYFN0cmluZy5wcm90b3R5cGUucmVwbGFjZWAgbWV0aG9kCiAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtc3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlCiAgZnVuY3Rpb24gcmVwbGFjZShzZWFyY2hWYWx1ZSwgcmVwbGFjZVZhbHVlKSB7CiAgICB2YXIgTyA9IGRlZmluZWQodGhpcyk7CiAgICB2YXIgZm4gPSBzZWFyY2hWYWx1ZSA9PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiBzZWFyY2hWYWx1ZVtSRVBMQUNFXTsKICAgIHJldHVybiBmbiAhPT0gdW5kZWZpbmVkID8gZm4uY2FsbChzZWFyY2hWYWx1ZSwgTywgcmVwbGFjZVZhbHVlKSA6ICRyZXBsYWNlLmNhbGwoU3RyaW5nKE8pLCBzZWFyY2hWYWx1ZSwgcmVwbGFjZVZhbHVlKTsKICB9LCAvLyBgUmVnRXhwLnByb3RvdHlwZVtAQHJlcGxhY2VdYCBtZXRob2QKICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1yZWdleHAucHJvdG90eXBlLUBAcmVwbGFjZQogIGZ1bmN0aW9uIChyZWdleHAsIHJlcGxhY2VWYWx1ZSkgewogICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZSgkcmVwbGFjZSwgcmVnZXhwLCB0aGlzLCByZXBsYWNlVmFsdWUpOwogICAgaWYgKHJlcy5kb25lKSByZXR1cm4gcmVzLnZhbHVlOwogICAgdmFyIHJ4ID0gYW5PYmplY3QocmVnZXhwKTsKICAgIHZhciBTID0gU3RyaW5nKHRoaXMpOwogICAgdmFyIGZ1bmN0aW9uYWxSZXBsYWNlID0gdHlwZW9mIHJlcGxhY2VWYWx1ZSA9PT0gJ2Z1bmN0aW9uJzsKICAgIGlmICghZnVuY3Rpb25hbFJlcGxhY2UpIHJlcGxhY2VWYWx1ZSA9IFN0cmluZyhyZXBsYWNlVmFsdWUpOwogICAgdmFyIGdsb2JhbCA9IHJ4Lmdsb2JhbDsKCiAgICBpZiAoZ2xvYmFsKSB7CiAgICAgIHZhciBmdWxsVW5pY29kZSA9IHJ4LnVuaWNvZGU7CiAgICAgIHJ4Lmxhc3RJbmRleCA9IDA7CiAgICB9CgogICAgdmFyIHJlc3VsdHMgPSBbXTsKCiAgICB3aGlsZSAodHJ1ZSkgewogICAgICB2YXIgcmVzdWx0ID0gcmVnRXhwRXhlYyhyeCwgUyk7CiAgICAgIGlmIChyZXN1bHQgPT09IG51bGwpIGJyZWFrOwogICAgICByZXN1bHRzLnB1c2gocmVzdWx0KTsKICAgICAgaWYgKCFnbG9iYWwpIGJyZWFrOwogICAgICB2YXIgbWF0Y2hTdHIgPSBTdHJpbmcocmVzdWx0WzBdKTsKICAgICAgaWYgKG1hdGNoU3RyID09PSAnJykgcngubGFzdEluZGV4ID0gYWR2YW5jZVN0cmluZ0luZGV4KFMsIHRvTGVuZ3RoKHJ4Lmxhc3RJbmRleCksIGZ1bGxVbmljb2RlKTsKICAgIH0KCiAgICB2YXIgYWNjdW11bGF0ZWRSZXN1bHQgPSAnJzsKICAgIHZhciBuZXh0U291cmNlUG9zaXRpb24gPSAwOwoKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzdWx0cy5sZW5ndGg7IGkrKykgewogICAgICByZXN1bHQgPSByZXN1bHRzW2ldOwogICAgICB2YXIgbWF0Y2hlZCA9IFN0cmluZyhyZXN1bHRbMF0pOwogICAgICB2YXIgcG9zaXRpb24gPSBtYXgobWluKHRvSW50ZWdlcihyZXN1bHQuaW5kZXgpLCBTLmxlbmd0aCksIDApOwogICAgICB2YXIgY2FwdHVyZXMgPSBbXTsgLy8gTk9URTogVGhpcyBpcyBlcXVpdmFsZW50IHRvCiAgICAgIC8vICAgY2FwdHVyZXMgPSByZXN1bHQuc2xpY2UoMSkubWFwKG1heWJlVG9TdHJpbmcpCiAgICAgIC8vIGJ1dCBmb3Igc29tZSByZWFzb24gYG5hdGl2ZVNsaWNlLmNhbGwocmVzdWx0LCAxLCByZXN1bHQubGVuZ3RoKWAgKGNhbGxlZCBpbgogICAgICAvLyB0aGUgc2xpY2UgcG9seWZpbGwgd2hlbiBzbGljaW5nIG5hdGl2ZSBhcnJheXMpICJkb2Vzbid0IHdvcmsiIGluIHNhZmFyaSA5IGFuZAogICAgICAvLyBjYXVzZXMgYSBjcmFzaCAoaHR0cHM6Ly9wYXN0ZWJpbi5jb20vTjIxUXplUUEpIHdoZW4gdHJ5aW5nIHRvIGRlYnVnIGl0LgoKICAgICAgZm9yICh2YXIgaiA9IDE7IGogPCByZXN1bHQubGVuZ3RoOyBqKyspIHsKICAgICAgICBjYXB0dXJlcy5wdXNoKG1heWJlVG9TdHJpbmcocmVzdWx0W2pdKSk7CiAgICAgIH0KCiAgICAgIHZhciBuYW1lZENhcHR1cmVzID0gcmVzdWx0Lmdyb3VwczsKCiAgICAgIGlmIChmdW5jdGlvbmFsUmVwbGFjZSkgewogICAgICAgIHZhciByZXBsYWNlckFyZ3MgPSBbbWF0Y2hlZF0uY29uY2F0KGNhcHR1cmVzLCBwb3NpdGlvbiwgUyk7CiAgICAgICAgaWYgKG5hbWVkQ2FwdHVyZXMgIT09IHVuZGVmaW5lZCkgcmVwbGFjZXJBcmdzLnB1c2gobmFtZWRDYXB0dXJlcyk7CiAgICAgICAgdmFyIHJlcGxhY2VtZW50ID0gU3RyaW5nKHJlcGxhY2VWYWx1ZS5hcHBseSh1bmRlZmluZWQsIHJlcGxhY2VyQXJncykpOwogICAgICB9IGVsc2UgewogICAgICAgIHJlcGxhY2VtZW50ID0gZ2V0U3Vic3RpdHV0aW9uKG1hdGNoZWQsIFMsIHBvc2l0aW9uLCBjYXB0dXJlcywgbmFtZWRDYXB0dXJlcywgcmVwbGFjZVZhbHVlKTsKICAgICAgfQoKICAgICAgaWYgKHBvc2l0aW9uID49IG5leHRTb3VyY2VQb3NpdGlvbikgewogICAgICAgIGFjY3VtdWxhdGVkUmVzdWx0ICs9IFMuc2xpY2UobmV4dFNvdXJjZVBvc2l0aW9uLCBwb3NpdGlvbikgKyByZXBsYWNlbWVudDsKICAgICAgICBuZXh0U291cmNlUG9zaXRpb24gPSBwb3NpdGlvbiArIG1hdGNoZWQubGVuZ3RoOwogICAgICB9CiAgICB9CgogICAgcmV0dXJuIGFjY3VtdWxhdGVkUmVzdWx0ICsgUy5zbGljZShuZXh0U291cmNlUG9zaXRpb24pOwogIH1dOyAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1nZXRzdWJzdGl0dXRpb24KCiAgZnVuY3Rpb24gZ2V0U3Vic3RpdHV0aW9uKG1hdGNoZWQsIHN0ciwgcG9zaXRpb24sIGNhcHR1cmVzLCBuYW1lZENhcHR1cmVzLCByZXBsYWNlbWVudCkgewogICAgdmFyIHRhaWxQb3MgPSBwb3NpdGlvbiArIG1hdGNoZWQubGVuZ3RoOwogICAgdmFyIG0gPSBjYXB0dXJlcy5sZW5ndGg7CiAgICB2YXIgc3ltYm9scyA9IFNVQlNUSVRVVElPTl9TWU1CT0xTX05PX05BTUVEOwoKICAgIGlmIChuYW1lZENhcHR1cmVzICE9PSB1bmRlZmluZWQpIHsKICAgICAgbmFtZWRDYXB0dXJlcyA9IHRvT2JqZWN0KG5hbWVkQ2FwdHVyZXMpOwogICAgICBzeW1ib2xzID0gU1VCU1RJVFVUSU9OX1NZTUJPTFM7CiAgICB9CgogICAgcmV0dXJuICRyZXBsYWNlLmNhbGwocmVwbGFjZW1lbnQsIHN5bWJvbHMsIGZ1bmN0aW9uIChtYXRjaCwgY2gpIHsKICAgICAgdmFyIGNhcHR1cmU7CgogICAgICBzd2l0Y2ggKGNoLmNoYXJBdCgwKSkgewogICAgICAgIGNhc2UgJyQnOgogICAgICAgICAgcmV0dXJuICckJzsKCiAgICAgICAgY2FzZSAnJic6CiAgICAgICAgICByZXR1cm4gbWF0Y2hlZDsKCiAgICAgICAgY2FzZSAnYCc6CiAgICAgICAgICByZXR1cm4gc3RyLnNsaWNlKDAsIHBvc2l0aW9uKTsKCiAgICAgICAgY2FzZSAiJyI6CiAgICAgICAgICByZXR1cm4gc3RyLnNsaWNlKHRhaWxQb3MpOwoKICAgICAgICBjYXNlICc8JzoKICAgICAgICAgIGNhcHR1cmUgPSBuYW1lZENhcHR1cmVzW2NoLnNsaWNlKDEsIC0xKV07CiAgICAgICAgICBicmVhazsKCiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIC8vIFxkXGQ/CiAgICAgICAgICB2YXIgbiA9ICtjaDsKICAgICAgICAgIGlmIChuID09PSAwKSByZXR1cm4gbWF0Y2g7CgogICAgICAgICAgaWYgKG4gPiBtKSB7CiAgICAgICAgICAgIHZhciBmID0gZmxvb3IobiAvIDEwKTsKICAgICAgICAgICAgaWYgKGYgPT09IDApIHJldHVybiBtYXRjaDsKICAgICAgICAgICAgaWYgKGYgPD0gbSkgcmV0dXJuIGNhcHR1cmVzW2YgLSAxXSA9PT0gdW5kZWZpbmVkID8gY2guY2hhckF0KDEpIDogY2FwdHVyZXNbZiAtIDFdICsgY2guY2hhckF0KDEpOwogICAgICAgICAgICByZXR1cm4gbWF0Y2g7CiAgICAgICAgICB9CgogICAgICAgICAgY2FwdHVyZSA9IGNhcHR1cmVzW24gLSAxXTsKICAgICAgfQoKICAgICAgcmV0dXJuIGNhcHR1cmUgPT09IHVuZGVmaW5lZCA/ICcnIDogY2FwdHVyZTsKICAgIH0pOwogIH0KfSk7"},{"version":3,"sources":["/Users/qitmac001131/Desktop/test/sniperjs/example/node/node_modules/core-js/modules/es6.regexp.replace.js"],"names":["anObject","require","toObject","toLength","toInteger","advanceStringIndex","regExpExec","max","Math","min","floor","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","maybeToString","it","undefined","String","defined","REPLACE","$replace","maybeCallNative","replace","searchValue","replaceValue","O","fn","call","regexp","res","done","value","rx","S","functionalReplace","global","fullUnicode","unicode","lastIndex","results","result","push","matchStr","accumulatedResult","nextSourcePosition","i","length","matched","position","index","captures","j","namedCaptures","groups","replacerArgs","concat","replacement","apply","getSubstitution","slice","str","tailPos","m","symbols","match","ch","capture","charAt","n","f"],"mappings":"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","sourcesContent":["'use strict';\n\nvar anObject = require('./_an-object');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar toInteger = require('./_to-integer');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = defined(this);\n      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return fn !== undefined\n        ? fn.call(searchValue, O, replaceValue)\n        : $replace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative($replace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n        results.push(result);\n        if (!global) break;\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n    // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return $replace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n"]}]}