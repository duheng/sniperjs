{"remainingRequest":"/Users/Aaron/Desktop/work/qunar/work/ykit3/packages/ykit3-cli/node_modules/babel-loader/lib/index.js??ref--4-2!/Users/Aaron/Desktop/work/qunar/work/sniperjs/example/node/src/pages/home/index.js","dependencies":[{"path":"/Users/Aaron/Desktop/work/qunar/work/sniperjs/example/node/src/pages/home/index.js","hash":"ec43bb96b05395941f4ee1c8493ea8b8"},{"path":"/Users/Aaron/Desktop/work/qunar/work/ykit3/packages/ykit3-cli/node_modules/cache-loader-hash/dist/cjs.js","hash":"d62e2d390167bf8193569f1644327c55"},{"path":"/Users/Aaron/Desktop/work/qunar/work/ykit3/packages/ykit3-cli/node_modules/babel-loader/lib/index.js","hash":"19adf3159c902f1ed7907f3931384270"}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/Aaron/Desktop/work/qunar/work/sniperjs/example/node/src/pages/home/index.js"],"names":["sss","Sniperjs","url","Home","HomeSelector","HomeActions","args","props","history","push","actions","fetchHomeData","console","log","asadf","homeData","home","indexTop","indexMain","special","_","goAbout","Component"],"mappings":";;;;;;;;;AACA;;AAEA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAIA,GAAG,GAAG,IAAIC,cAAJ,CAAa;AACnBC,EAAAA,GAAG,EAAC;AADe,CAAb,CAAV;IAMqBC,I,WADpB,sBAAQC,aAAR,EAAsBC,WAAtB,C;;;;;AAEC,kBAAqB;AAAA;;AAAA;;AAAA,sCAANC,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACnB,oDAASA,IAAT;;AADmB,8DAuBX,YAAM;AACd,YAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD,KAzBoB;;AAAA;AAEpB,G,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;WACA,6BAAoB;AAClB,UAAQC,OAAR,GAAoB,KAAKH,KAAzB,CAAQG,OAAR;AACAA,MAAAA,OAAO,CAACC,aAAR;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBC,KAAlB;AACD;;;WAID,kBAAS;AAAA;;AACP,UAAQC,QAAR,GAAqB,KAAKR,KAAL,CAAWS,IAAhC,CAAQD,QAAR;AACA,UAAQE,QAAR,GAAyCF,QAAzC,CAAQE,QAAR;AAAA,UAAkBC,SAAlB,GAAyCH,QAAzC,CAAkBG,SAAlB;AAAA,UAA6BC,OAA7B,GAAyCJ,QAAzC,CAA6BI,OAA7B;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,OAAO,EAAE,iBAAAC,CAAC;AAAA,iBAAE,MAAI,CAACC,OAAL,EAAF;AAAA;AAAhC,SAEIJ,QAAQ,iBAAI,6BAAC,eAAD;AAAQ,QAAA,IAAI,EAAEA;AAAd,QAFhB,EAKIC,SAAS,iBAAI,6BAAC,cAAD;AAAO,QAAA,IAAI,EAAEA;AAAb,QALjB,EAQIC,OAAO,iBAAI,6BAAC,gBAAD;AAAS,QAAA,IAAI,EAAEA;AAAf,QARf,CADF;AAaD;;;;EA3C+BG,gB","sourcesContent":["\nimport React, { Component } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport TopNav from './components/TopNav';\nimport Panel from './components/Panel';\nimport Special from './components/Special';\n\nimport connect from 'app/store/connect';\nimport style from './style';\nimport HomeSelector from 'app/selectors/home';\nimport * as HomeActions from 'app/actions/home';\nimport hocb from './hocb'; //高阶函数的两种封装方式\nimport Sniperjs from \"../../../../../packages/WebErrorReporter/dist/index\"\nvar sss = new Sniperjs({\n    url:'http://pwapp.qunar.com/api/log/appletError'\n})\n\n\n@connect(HomeSelector, HomeActions)\nexport default class Home extends Component {\n  constructor(...args) {\n    super(...args);\n  }\n\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   //会在初始化和update时触发，用于替换componentWillReceiveProps，\n  //   //可以用来控制 props 更新 state 的过程；它返回一个对象表示新的 state；\n  //   //如果不需要更新，返回 null 即可\n  //   return null\n  // }\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   return false\n  // }\n  // getSnapshotBeforeUpdate() {\n  //   // 组件即将销毁\n  //  // 可以在此处移除订阅，定时器等等\n  // }\n  componentDidMount() {\n    const { actions } = this.props;\n    actions.fetchHomeData();\n   \n    console.log('a--',asadf)\n  }\n  goAbout = () => {\n    this.props.history.push('/about')\n  }\n  render() {\n    const { homeData } = this.props.home\n    const { indexTop, indexMain, special } = homeData\n    return (\n      <div className=\"Home\" onClick={_=>this.goAbout()}>\n        {\n          indexTop && <TopNav data={indexTop}/>\n        }\n        {\n          indexMain && <Panel data={indexMain} />\n        }\n        {\n          special && <Special data={special} />\n        }\n      </div>\n    );\n  }\n}\n"]}]}