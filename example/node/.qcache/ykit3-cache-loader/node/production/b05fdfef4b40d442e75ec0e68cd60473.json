{"remainingRequest":"/Users/Aaron/Desktop/work/qunar/work/ykit3/packages/ykit3-cli/node_modules/babel-loader/lib/index.js??ref--4-2!/Users/Aaron/Desktop/work/qunar/work/sniperjs/example/node/node_modules/redux-actions/es/createActions.js","dependencies":[{"path":"/Users/Aaron/Desktop/work/qunar/work/sniperjs/example/node/node_modules/redux-actions/es/createActions.js","hash":"b8eb391f0d03129f0dec023bf6b8aa5b"},{"path":"/Users/Aaron/Desktop/work/qunar/work/ykit3/packages/ykit3-cli/node_modules/cache-loader-hash/dist/cjs.js","hash":"d62e2d390167bf8193569f1644327c55"},{"path":"/Users/Aaron/Desktop/work/qunar/work/ykit3/packages/ykit3-cli/node_modules/babel-loader/lib/index.js","hash":"19adf3159c902f1ed7907f3931384270"}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSBjcmVhdGVBY3Rpb25zOwoKdmFyIF9pbnZhcmlhbnQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoImludmFyaWFudCIpKTsKCnZhciBfaXNQbGFpbk9iamVjdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi91dGlscy9pc1BsYWluT2JqZWN0IikpOwoKdmFyIF9pc0Z1bmN0aW9uID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL3V0aWxzL2lzRnVuY3Rpb24iKSk7Cgp2YXIgX2lkZW50aXR5ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL3V0aWxzL2lkZW50aXR5IikpOwoKdmFyIF9pc0FycmF5ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL3V0aWxzL2lzQXJyYXkiKSk7Cgp2YXIgX2lzU3RyaW5nID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL3V0aWxzL2lzU3RyaW5nIikpOwoKdmFyIF9pc05pbCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi91dGlscy9pc05pbCIpKTsKCnZhciBfZ2V0TGFzdEVsZW1lbnQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4vdXRpbHMvZ2V0TGFzdEVsZW1lbnQiKSk7Cgp2YXIgX2NhbWVsQ2FzZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi91dGlscy9jYW1lbENhc2UiKSk7Cgp2YXIgX2FycmF5VG9PYmplY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4vdXRpbHMvYXJyYXlUb09iamVjdCIpKTsKCnZhciBfZmxhdHRlbkFjdGlvbk1hcCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi91dGlscy9mbGF0dGVuQWN0aW9uTWFwIikpOwoKdmFyIF91bmZsYXR0ZW5BY3Rpb25DcmVhdG9ycyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi91dGlscy91bmZsYXR0ZW5BY3Rpb25DcmVhdG9ycyIpKTsKCnZhciBfY3JlYXRlQWN0aW9uID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL2NyZWF0ZUFjdGlvbiIpKTsKCnZhciBfY29uc3RhbnRzID0gcmVxdWlyZSgiLi9jb25zdGFudHMiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgewogIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsKICAgIHZhciBvd25LZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTsKCiAgICBpZiAodHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09ICdmdW5jdGlvbicpIHsKICAgICAgb3duS2V5cyA9IG93bktleXMuY29uY2F0KE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlKS5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgewogICAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwgc3ltKS5lbnVtZXJhYmxlOwogICAgICB9KSk7CiAgICB9CgogICAgb3duS2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7CiAgICB9KTsKICB9CgogIHJldHVybiB0YXJnZXQ7Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsKICBpZiAoa2V5IGluIG9iaikgewogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7CiAgICAgIHZhbHVlOiB2YWx1ZSwKICAgICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgICB3cml0YWJsZTogdHJ1ZQogICAgfSk7CiAgfSBlbHNlIHsKICAgIG9ialtrZXldID0gdmFsdWU7CiAgfQoKICByZXR1cm4gb2JqOwp9CgpmdW5jdGlvbiBjcmVhdGVBY3Rpb25zKGFjdGlvbk1hcCkgewogIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBpZGVudGl0eUFjdGlvbnMgPSBuZXcgQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykgewogICAgaWRlbnRpdHlBY3Rpb25zW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTsKICB9CgogIHZhciBvcHRpb25zID0gKDAsIF9pc1BsYWluT2JqZWN0LmRlZmF1bHQpKCgwLCBfZ2V0TGFzdEVsZW1lbnQuZGVmYXVsdCkoaWRlbnRpdHlBY3Rpb25zKSkgPyBpZGVudGl0eUFjdGlvbnMucG9wKCkgOiB7fTsKICAoMCwgX2ludmFyaWFudC5kZWZhdWx0KShpZGVudGl0eUFjdGlvbnMuZXZlcnkoX2lzU3RyaW5nLmRlZmF1bHQpICYmICgoMCwgX2lzU3RyaW5nLmRlZmF1bHQpKGFjdGlvbk1hcCkgfHwgKDAsIF9pc1BsYWluT2JqZWN0LmRlZmF1bHQpKGFjdGlvbk1hcCkpLCAnRXhwZWN0ZWQgb3B0aW9uYWwgb2JqZWN0IGZvbGxvd2VkIGJ5IHN0cmluZyBhY3Rpb24gdHlwZXMnKTsKCiAgaWYgKCgwLCBfaXNTdHJpbmcuZGVmYXVsdCkoYWN0aW9uTWFwKSkgewogICAgcmV0dXJuIGFjdGlvbkNyZWF0b3JzRnJvbUlkZW50aXR5QWN0aW9ucyhbYWN0aW9uTWFwXS5jb25jYXQoaWRlbnRpdHlBY3Rpb25zKSwgb3B0aW9ucyk7CiAgfQoKICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgYWN0aW9uQ3JlYXRvcnNGcm9tQWN0aW9uTWFwKGFjdGlvbk1hcCwgb3B0aW9ucyksIGFjdGlvbkNyZWF0b3JzRnJvbUlkZW50aXR5QWN0aW9ucyhpZGVudGl0eUFjdGlvbnMsIG9wdGlvbnMpKTsKfQoKZnVuY3Rpb24gYWN0aW9uQ3JlYXRvcnNGcm9tQWN0aW9uTWFwKGFjdGlvbk1hcCwgb3B0aW9ucykgewogIHZhciBmbGF0QWN0aW9uTWFwID0gKDAsIF9mbGF0dGVuQWN0aW9uTWFwLmRlZmF1bHQpKGFjdGlvbk1hcCwgb3B0aW9ucyk7CiAgdmFyIGZsYXRBY3Rpb25DcmVhdG9ycyA9IGFjdGlvbk1hcFRvQWN0aW9uQ3JlYXRvcnMoZmxhdEFjdGlvbk1hcCk7CiAgcmV0dXJuICgwLCBfdW5mbGF0dGVuQWN0aW9uQ3JlYXRvcnMuZGVmYXVsdCkoZmxhdEFjdGlvbkNyZWF0b3JzLCBvcHRpb25zKTsKfQoKZnVuY3Rpb24gYWN0aW9uTWFwVG9BY3Rpb25DcmVhdG9ycyhhY3Rpb25NYXAsIF90ZW1wKSB7CiAgdmFyIF9yZWYgPSBfdGVtcCA9PT0gdm9pZCAwID8ge30gOiBfdGVtcCwKICAgICAgcHJlZml4ID0gX3JlZi5wcmVmaXgsCiAgICAgIF9yZWYkbmFtZXNwYWNlID0gX3JlZi5uYW1lc3BhY2UsCiAgICAgIG5hbWVzcGFjZSA9IF9yZWYkbmFtZXNwYWNlID09PSB2b2lkIDAgPyBfY29uc3RhbnRzLkRFRkFVTFRfTkFNRVNQQUNFIDogX3JlZiRuYW1lc3BhY2U7CgogIGZ1bmN0aW9uIGlzVmFsaWRBY3Rpb25NYXBWYWx1ZShhY3Rpb25NYXBWYWx1ZSkgewogICAgaWYgKCgwLCBfaXNGdW5jdGlvbi5kZWZhdWx0KShhY3Rpb25NYXBWYWx1ZSkgfHwgKDAsIF9pc05pbC5kZWZhdWx0KShhY3Rpb25NYXBWYWx1ZSkpIHsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgaWYgKCgwLCBfaXNBcnJheS5kZWZhdWx0KShhY3Rpb25NYXBWYWx1ZSkpIHsKICAgICAgdmFyIF9hY3Rpb25NYXBWYWx1ZSQgPSBhY3Rpb25NYXBWYWx1ZVswXSwKICAgICAgICAgIHBheWxvYWQgPSBfYWN0aW9uTWFwVmFsdWUkID09PSB2b2lkIDAgPyBfaWRlbnRpdHkuZGVmYXVsdCA6IF9hY3Rpb25NYXBWYWx1ZSQsCiAgICAgICAgICBtZXRhID0gYWN0aW9uTWFwVmFsdWVbMV07CiAgICAgIHJldHVybiAoMCwgX2lzRnVuY3Rpb24uZGVmYXVsdCkocGF5bG9hZCkgJiYgKDAsIF9pc0Z1bmN0aW9uLmRlZmF1bHQpKG1ldGEpOwogICAgfQoKICAgIHJldHVybiBmYWxzZTsKICB9CgogIHJldHVybiAoMCwgX2FycmF5VG9PYmplY3QuZGVmYXVsdCkoT2JqZWN0LmtleXMoYWN0aW9uTWFwKSwgZnVuY3Rpb24gKHBhcnRpYWxBY3Rpb25DcmVhdG9ycywgdHlwZSkgewogICAgdmFyIF9vYmplY3RTcHJlYWQyOwoKICAgIHZhciBhY3Rpb25NYXBWYWx1ZSA9IGFjdGlvbk1hcFt0eXBlXTsKICAgICgwLCBfaW52YXJpYW50LmRlZmF1bHQpKGlzVmFsaWRBY3Rpb25NYXBWYWx1ZShhY3Rpb25NYXBWYWx1ZSksICdFeHBlY3RlZCBmdW5jdGlvbiwgdW5kZWZpbmVkLCBudWxsLCBvciBhcnJheSB3aXRoIHBheWxvYWQgYW5kIG1ldGEgJyArICgiZnVuY3Rpb25zIGZvciAiICsgdHlwZSkpOwogICAgdmFyIHByZWZpeGVkVHlwZSA9IHByZWZpeCA/ICIiICsgcHJlZml4ICsgbmFtZXNwYWNlICsgdHlwZSA6IHR5cGU7CiAgICB2YXIgYWN0aW9uQ3JlYXRvciA9ICgwLCBfaXNBcnJheS5kZWZhdWx0KShhY3Rpb25NYXBWYWx1ZSkgPyBfY3JlYXRlQWN0aW9uLmRlZmF1bHQuYXBwbHkodm9pZCAwLCBbcHJlZml4ZWRUeXBlXS5jb25jYXQoYWN0aW9uTWFwVmFsdWUpKSA6ICgwLCBfY3JlYXRlQWN0aW9uLmRlZmF1bHQpKHByZWZpeGVkVHlwZSwgYWN0aW9uTWFwVmFsdWUpOwogICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe30sIHBhcnRpYWxBY3Rpb25DcmVhdG9ycywgKF9vYmplY3RTcHJlYWQyID0ge30sIF9vYmplY3RTcHJlYWQyW3R5cGVdID0gYWN0aW9uQ3JlYXRvciwgX29iamVjdFNwcmVhZDIpKTsKICB9KTsKfQoKZnVuY3Rpb24gYWN0aW9uQ3JlYXRvcnNGcm9tSWRlbnRpdHlBY3Rpb25zKGlkZW50aXR5QWN0aW9ucywgb3B0aW9ucykgewogIHZhciBhY3Rpb25NYXAgPSAoMCwgX2FycmF5VG9PYmplY3QuZGVmYXVsdCkoaWRlbnRpdHlBY3Rpb25zLCBmdW5jdGlvbiAocGFydGlhbEFjdGlvbk1hcCwgdHlwZSkgewogICAgdmFyIF9vYmplY3RTcHJlYWQzOwoKICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBwYXJ0aWFsQWN0aW9uTWFwLCAoX29iamVjdFNwcmVhZDMgPSB7fSwgX29iamVjdFNwcmVhZDNbdHlwZV0gPSBfaWRlbnRpdHkuZGVmYXVsdCwgX29iamVjdFNwcmVhZDMpKTsKICB9KTsKICB2YXIgYWN0aW9uQ3JlYXRvcnMgPSBhY3Rpb25NYXBUb0FjdGlvbkNyZWF0b3JzKGFjdGlvbk1hcCwgb3B0aW9ucyk7CiAgcmV0dXJuICgwLCBfYXJyYXlUb09iamVjdC5kZWZhdWx0KShPYmplY3Qua2V5cyhhY3Rpb25DcmVhdG9ycyksIGZ1bmN0aW9uIChwYXJ0aWFsQWN0aW9uQ3JlYXRvcnMsIHR5cGUpIHsKICAgIHZhciBfb2JqZWN0U3ByZWFkNDsKCiAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgcGFydGlhbEFjdGlvbkNyZWF0b3JzLCAoX29iamVjdFNwcmVhZDQgPSB7fSwgX29iamVjdFNwcmVhZDRbKDAsIF9jYW1lbENhc2UuZGVmYXVsdCkodHlwZSldID0gYWN0aW9uQ3JlYXRvcnNbdHlwZV0sIF9vYmplY3RTcHJlYWQ0KSk7CiAgfSk7Cn0="},null]}