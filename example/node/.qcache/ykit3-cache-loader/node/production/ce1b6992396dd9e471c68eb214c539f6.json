{"remainingRequest":"/Users/Aaron/Desktop/work/qunar/work/ykit3/packages/ykit3-cli/node_modules/babel-loader/lib/index.js??ref--4-2!/Users/Aaron/Desktop/work/qunar/work/sniperjs/example/node/node_modules/react-router-redux/node_modules/react-router/es/Redirect.js","dependencies":[{"path":"/Users/Aaron/Desktop/work/qunar/work/sniperjs/example/node/node_modules/react-router-redux/node_modules/react-router/es/Redirect.js","hash":"1fc4c0e79746aa6dbcdb01b09ef44143"},{"path":"/Users/Aaron/Desktop/work/qunar/work/ykit3/packages/ykit3-cli/node_modules/cache-loader-hash/dist/cjs.js","hash":"d62e2d390167bf8193569f1644327c55"},{"path":"/Users/Aaron/Desktop/work/qunar/work/ykit3/packages/ykit3-cli/node_modules/babel-loader/lib/index.js","hash":"19adf3159c902f1ed7907f3931384270"}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJyZWFjdCIpKTsKCnZhciBfcHJvcFR5cGVzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJwcm9wLXR5cGVzIikpOwoKdmFyIF93YXJuaW5nID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJ3YXJuaW5nIikpOwoKdmFyIF9pbnZhcmlhbnQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoImludmFyaWFudCIpKTsKCnZhciBfaGlzdG9yeSA9IHJlcXVpcmUoImhpc3RvcnkiKTsKCnZhciBfZ2VuZXJhdGVQYXRoID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL2dlbmVyYXRlUGF0aCIpKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9CgpmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyAiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2YiOyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSAic3ltYm9sIikgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gInN5bWJvbCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mKG9iaik7IH0KCnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgewogIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOwoKICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsKICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsKICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOwogICAgICB9CiAgICB9CiAgfQoKICByZXR1cm4gdGFyZ2V0Owp9OwoKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgewogIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7CiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsKICB9Cn0KCmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsKICBpZiAoIXNlbGYpIHsKICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7CiAgfQoKICByZXR1cm4gY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gIm9iamVjdCIgfHwgdHlwZW9mIGNhbGwgPT09ICJmdW5jdGlvbiIpID8gY2FsbCA6IHNlbGY7Cn0KCmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgewogIGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7CiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90ICIgKyBfdHlwZW9mKHN1cGVyQ2xhc3MpKTsKICB9CgogIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgewogICAgY29uc3RydWN0b3I6IHsKICAgICAgdmFsdWU6IHN1YkNsYXNzLAogICAgICBlbnVtZXJhYmxlOiBmYWxzZSwKICAgICAgd3JpdGFibGU6IHRydWUsCiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZQogICAgfQogIH0pOwogIGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsKfQoKLyoqCiAqIFRoZSBwdWJsaWMgQVBJIGZvciB1cGRhdGluZyB0aGUgbG9jYXRpb24gcHJvZ3JhbW1hdGljYWxseQogKiB3aXRoIGEgY29tcG9uZW50LgogKi8KdmFyIFJlZGlyZWN0ID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHsKICBfaW5oZXJpdHMoUmVkaXJlY3QsIF9SZWFjdCRDb21wb25lbnQpOwoKICBmdW5jdGlvbiBSZWRpcmVjdCgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSZWRpcmVjdCk7CgogICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7CiAgfQoKICBSZWRpcmVjdC5wcm90b3R5cGUuaXNTdGF0aWMgPSBmdW5jdGlvbiBpc1N0YXRpYygpIHsKICAgIHJldHVybiB0aGlzLmNvbnRleHQucm91dGVyICYmIHRoaXMuY29udGV4dC5yb3V0ZXIuc3RhdGljQ29udGV4dDsKICB9OwoKICBSZWRpcmVjdC5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkgewogICAgKDAsIF9pbnZhcmlhbnQuZGVmYXVsdCkodGhpcy5jb250ZXh0LnJvdXRlciwgIllvdSBzaG91bGQgbm90IHVzZSA8UmVkaXJlY3Q+IG91dHNpZGUgYSA8Um91dGVyPiIpOwogICAgaWYgKHRoaXMuaXNTdGF0aWMoKSkgdGhpcy5wZXJmb3JtKCk7CiAgfTsKCiAgUmVkaXJlY3QucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7CiAgICBpZiAoIXRoaXMuaXNTdGF0aWMoKSkgdGhpcy5wZXJmb3JtKCk7CiAgfTsKCiAgUmVkaXJlY3QucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHsKICAgIHZhciBwcmV2VG8gPSAoMCwgX2hpc3RvcnkuY3JlYXRlTG9jYXRpb24pKHByZXZQcm9wcy50byk7CiAgICB2YXIgbmV4dFRvID0gKDAsIF9oaXN0b3J5LmNyZWF0ZUxvY2F0aW9uKSh0aGlzLnByb3BzLnRvKTsKCiAgICBpZiAoKDAsIF9oaXN0b3J5LmxvY2F0aW9uc0FyZUVxdWFsKShwcmV2VG8sIG5leHRUbykpIHsKICAgICAgKDAsIF93YXJuaW5nLmRlZmF1bHQpKGZhbHNlLCAiWW91IHRyaWVkIHRvIHJlZGlyZWN0IHRvIHRoZSBzYW1lIHJvdXRlIHlvdSdyZSBjdXJyZW50bHkgb246ICIgKyAoIlwiIiArIG5leHRUby5wYXRobmFtZSArIG5leHRUby5zZWFyY2ggKyAiXCIiKSk7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB0aGlzLnBlcmZvcm0oKTsKICB9OwoKICBSZWRpcmVjdC5wcm90b3R5cGUuY29tcHV0ZVRvID0gZnVuY3Rpb24gY29tcHV0ZVRvKF9yZWYpIHsKICAgIHZhciBjb21wdXRlZE1hdGNoID0gX3JlZi5jb21wdXRlZE1hdGNoLAogICAgICAgIHRvID0gX3JlZi50bzsKCiAgICBpZiAoY29tcHV0ZWRNYXRjaCkgewogICAgICBpZiAodHlwZW9mIHRvID09PSAic3RyaW5nIikgewogICAgICAgIHJldHVybiAoMCwgX2dlbmVyYXRlUGF0aC5kZWZhdWx0KSh0bywgY29tcHV0ZWRNYXRjaC5wYXJhbXMpOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgdG8sIHsKICAgICAgICAgIHBhdGhuYW1lOiAoMCwgX2dlbmVyYXRlUGF0aC5kZWZhdWx0KSh0by5wYXRobmFtZSwgY29tcHV0ZWRNYXRjaC5wYXJhbXMpCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gdG87CiAgfTsKCiAgUmVkaXJlY3QucHJvdG90eXBlLnBlcmZvcm0gPSBmdW5jdGlvbiBwZXJmb3JtKCkgewogICAgdmFyIGhpc3RvcnkgPSB0aGlzLmNvbnRleHQucm91dGVyLmhpc3Rvcnk7CiAgICB2YXIgcHVzaCA9IHRoaXMucHJvcHMucHVzaDsKICAgIHZhciB0byA9IHRoaXMuY29tcHV0ZVRvKHRoaXMucHJvcHMpOwoKICAgIGlmIChwdXNoKSB7CiAgICAgIGhpc3RvcnkucHVzaCh0byk7CiAgICB9IGVsc2UgewogICAgICBoaXN0b3J5LnJlcGxhY2UodG8pOwogICAgfQogIH07CgogIFJlZGlyZWN0LnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7CiAgICByZXR1cm4gbnVsbDsKICB9OwoKICByZXR1cm4gUmVkaXJlY3Q7Cn0oX3JlYWN0LmRlZmF1bHQuQ29tcG9uZW50KTsKClJlZGlyZWN0LnByb3BUeXBlcyA9IHsKICBjb21wdXRlZE1hdGNoOiBfcHJvcFR5cGVzLmRlZmF1bHQub2JqZWN0LAogIC8vIHByaXZhdGUsIGZyb20gPFN3aXRjaD4KICBwdXNoOiBfcHJvcFR5cGVzLmRlZmF1bHQuYm9vbCwKICBmcm9tOiBfcHJvcFR5cGVzLmRlZmF1bHQuc3RyaW5nLAogIHRvOiBfcHJvcFR5cGVzLmRlZmF1bHQub25lT2ZUeXBlKFtfcHJvcFR5cGVzLmRlZmF1bHQuc3RyaW5nLCBfcHJvcFR5cGVzLmRlZmF1bHQub2JqZWN0XSkuaXNSZXF1aXJlZAp9OwpSZWRpcmVjdC5kZWZhdWx0UHJvcHMgPSB7CiAgcHVzaDogZmFsc2UKfTsKUmVkaXJlY3QuY29udGV4dFR5cGVzID0gewogIHJvdXRlcjogX3Byb3BUeXBlcy5kZWZhdWx0LnNoYXBlKHsKICAgIGhpc3Rvcnk6IF9wcm9wVHlwZXMuZGVmYXVsdC5zaGFwZSh7CiAgICAgIHB1c2g6IF9wcm9wVHlwZXMuZGVmYXVsdC5mdW5jLmlzUmVxdWlyZWQsCiAgICAgIHJlcGxhY2U6IF9wcm9wVHlwZXMuZGVmYXVsdC5mdW5jLmlzUmVxdWlyZWQKICAgIH0pLmlzUmVxdWlyZWQsCiAgICBzdGF0aWNDb250ZXh0OiBfcHJvcFR5cGVzLmRlZmF1bHQub2JqZWN0CiAgfSkuaXNSZXF1aXJlZAp9Owp2YXIgX2RlZmF1bHQgPSBSZWRpcmVjdDsKZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7"},null]}